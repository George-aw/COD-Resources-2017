;buildInfoPackage: chisel3, version: 3.1.7, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2019-03-20 22:15:13.399, builtAtMillis: 1553120113399
circuit DDU : 
  module ALU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip A : UInt<32>, flip B : UInt<32>, flip opcode : UInt<4>, out : UInt<32>, flagZero : UInt<1>}
    
    node _T_29 = add(io.A, io.B) @[ALU.scala 34:32]
    node _T_30 = tail(_T_29, 1) @[ALU.scala 34:32]
    node _T_31 = sub(io.A, io.B) @[ALU.scala 35:32]
    node _T_32 = asUInt(_T_31) @[ALU.scala 35:32]
    node _T_33 = tail(_T_32, 1) @[ALU.scala 35:32]
    node _T_34 = bits(io.B, 4, 0) @[ALU.scala 38:39]
    node _T_35 = dshl(io.A, _T_34) @[ALU.scala 38:32]
    node _T_36 = asSInt(io.A) @[ALU.scala 39:32]
    node _T_37 = asSInt(io.B) @[ALU.scala 39:46]
    node _T_38 = lt(_T_36, _T_37) @[ALU.scala 39:39]
    node _T_39 = lt(io.A, io.B) @[ALU.scala 40:32]
    node _T_40 = and(io.A, io.B) @[ALU.scala 41:32]
    node _T_41 = or(io.A, io.B) @[ALU.scala 42:32]
    node _T_42 = xor(io.A, io.B) @[ALU.scala 43:32]
    node _T_43 = or(io.A, io.B) @[ALU.scala 44:33]
    node _T_44 = not(_T_43) @[ALU.scala 44:26]
    node _T_45 = eq(UInt<4>("h0a"), io.opcode) @[Mux.scala 46:19]
    node _T_46 = mux(_T_45, io.A, io.B) @[Mux.scala 46:16]
    node _T_47 = eq(UInt<4>("h0c"), io.opcode) @[Mux.scala 46:19]
    node _T_48 = mux(_T_47, _T_44, _T_46) @[Mux.scala 46:16]
    node _T_49 = eq(UInt<4>("h04"), io.opcode) @[Mux.scala 46:19]
    node _T_50 = mux(_T_49, _T_42, _T_48) @[Mux.scala 46:16]
    node _T_51 = eq(UInt<4>("h03"), io.opcode) @[Mux.scala 46:19]
    node _T_52 = mux(_T_51, _T_41, _T_50) @[Mux.scala 46:16]
    node _T_53 = eq(UInt<4>("h02"), io.opcode) @[Mux.scala 46:19]
    node _T_54 = mux(_T_53, _T_40, _T_52) @[Mux.scala 46:16]
    node _T_55 = eq(UInt<4>("h07"), io.opcode) @[Mux.scala 46:19]
    node _T_56 = mux(_T_55, _T_39, _T_54) @[Mux.scala 46:16]
    node _T_57 = eq(UInt<4>("h05"), io.opcode) @[Mux.scala 46:19]
    node _T_58 = mux(_T_57, _T_38, _T_56) @[Mux.scala 46:16]
    node _T_59 = eq(UInt<4>("h06"), io.opcode) @[Mux.scala 46:19]
    node _T_60 = mux(_T_59, _T_35, _T_58) @[Mux.scala 46:16]
    node _T_61 = eq(UInt<4>("h01"), io.opcode) @[Mux.scala 46:19]
    node _T_62 = mux(_T_61, _T_33, _T_60) @[Mux.scala 46:16]
    node _T_63 = eq(UInt<4>("h00"), io.opcode) @[Mux.scala 46:19]
    node _T_64 = mux(_T_63, _T_30, _T_62) @[Mux.scala 46:16]
    io.out <= _T_64 @[ALU.scala 33:12]
    node _T_66 = eq(io.out, UInt<1>("h00")) @[ALU.scala 47:28]
    io.flagZero <= _T_66 @[ALU.scala 47:17]
    
  module RegFile : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip ra_a : UInt<5>, flip ra_b : UInt<5>, flip wa : UInt<5>, flip wd : UInt<32>, rd_a : UInt<32>, rd_b : UInt<32>, flip RegWrite : UInt<1>, flip ra_c : UInt<5>, rd_c : UInt<32>}
    
    wire _T_58 : UInt<32>[32] @[RegFile.scala 21:32]
    _T_58[0] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[1] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[2] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[3] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[4] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[5] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[6] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[7] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[8] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[9] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[10] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[11] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[12] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[13] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[14] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[15] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[16] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[17] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[18] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[19] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[20] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[21] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[22] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[23] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[24] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[25] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[26] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[27] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[28] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[29] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[30] <= UInt<32>("h00") @[RegFile.scala 21:32]
    _T_58[31] <= UInt<32>("h00") @[RegFile.scala 21:32]
    reg regs : UInt<32>[32], clock with : (reset => (reset, _T_58)) @[RegFile.scala 21:23]
    node _T_262 = eq(io.wa, UInt<5>("h00")) @[RegFile.scala 23:21]
    node _T_263 = and(_T_262, io.RegWrite) @[RegFile.scala 23:34]
    when _T_263 : @[RegFile.scala 23:50]
      regs[0] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_265 = eq(io.wa, UInt<5>("h01")) @[RegFile.scala 23:21]
    node _T_266 = and(_T_265, io.RegWrite) @[RegFile.scala 23:34]
    when _T_266 : @[RegFile.scala 23:50]
      regs[1] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_268 = eq(io.wa, UInt<5>("h02")) @[RegFile.scala 23:21]
    node _T_269 = and(_T_268, io.RegWrite) @[RegFile.scala 23:34]
    when _T_269 : @[RegFile.scala 23:50]
      regs[2] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_271 = eq(io.wa, UInt<5>("h03")) @[RegFile.scala 23:21]
    node _T_272 = and(_T_271, io.RegWrite) @[RegFile.scala 23:34]
    when _T_272 : @[RegFile.scala 23:50]
      regs[3] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_274 = eq(io.wa, UInt<5>("h04")) @[RegFile.scala 23:21]
    node _T_275 = and(_T_274, io.RegWrite) @[RegFile.scala 23:34]
    when _T_275 : @[RegFile.scala 23:50]
      regs[4] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_277 = eq(io.wa, UInt<5>("h05")) @[RegFile.scala 23:21]
    node _T_278 = and(_T_277, io.RegWrite) @[RegFile.scala 23:34]
    when _T_278 : @[RegFile.scala 23:50]
      regs[5] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_280 = eq(io.wa, UInt<5>("h06")) @[RegFile.scala 23:21]
    node _T_281 = and(_T_280, io.RegWrite) @[RegFile.scala 23:34]
    when _T_281 : @[RegFile.scala 23:50]
      regs[6] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_283 = eq(io.wa, UInt<5>("h07")) @[RegFile.scala 23:21]
    node _T_284 = and(_T_283, io.RegWrite) @[RegFile.scala 23:34]
    when _T_284 : @[RegFile.scala 23:50]
      regs[7] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_286 = eq(io.wa, UInt<5>("h08")) @[RegFile.scala 23:21]
    node _T_287 = and(_T_286, io.RegWrite) @[RegFile.scala 23:34]
    when _T_287 : @[RegFile.scala 23:50]
      regs[8] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_289 = eq(io.wa, UInt<5>("h09")) @[RegFile.scala 23:21]
    node _T_290 = and(_T_289, io.RegWrite) @[RegFile.scala 23:34]
    when _T_290 : @[RegFile.scala 23:50]
      regs[9] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_292 = eq(io.wa, UInt<5>("h0a")) @[RegFile.scala 23:21]
    node _T_293 = and(_T_292, io.RegWrite) @[RegFile.scala 23:34]
    when _T_293 : @[RegFile.scala 23:50]
      regs[10] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_295 = eq(io.wa, UInt<5>("h0b")) @[RegFile.scala 23:21]
    node _T_296 = and(_T_295, io.RegWrite) @[RegFile.scala 23:34]
    when _T_296 : @[RegFile.scala 23:50]
      regs[11] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_298 = eq(io.wa, UInt<5>("h0c")) @[RegFile.scala 23:21]
    node _T_299 = and(_T_298, io.RegWrite) @[RegFile.scala 23:34]
    when _T_299 : @[RegFile.scala 23:50]
      regs[12] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_301 = eq(io.wa, UInt<5>("h0d")) @[RegFile.scala 23:21]
    node _T_302 = and(_T_301, io.RegWrite) @[RegFile.scala 23:34]
    when _T_302 : @[RegFile.scala 23:50]
      regs[13] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_304 = eq(io.wa, UInt<5>("h0e")) @[RegFile.scala 23:21]
    node _T_305 = and(_T_304, io.RegWrite) @[RegFile.scala 23:34]
    when _T_305 : @[RegFile.scala 23:50]
      regs[14] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_307 = eq(io.wa, UInt<5>("h0f")) @[RegFile.scala 23:21]
    node _T_308 = and(_T_307, io.RegWrite) @[RegFile.scala 23:34]
    when _T_308 : @[RegFile.scala 23:50]
      regs[15] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_310 = eq(io.wa, UInt<5>("h010")) @[RegFile.scala 23:21]
    node _T_311 = and(_T_310, io.RegWrite) @[RegFile.scala 23:34]
    when _T_311 : @[RegFile.scala 23:50]
      regs[16] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_313 = eq(io.wa, UInt<5>("h011")) @[RegFile.scala 23:21]
    node _T_314 = and(_T_313, io.RegWrite) @[RegFile.scala 23:34]
    when _T_314 : @[RegFile.scala 23:50]
      regs[17] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_316 = eq(io.wa, UInt<5>("h012")) @[RegFile.scala 23:21]
    node _T_317 = and(_T_316, io.RegWrite) @[RegFile.scala 23:34]
    when _T_317 : @[RegFile.scala 23:50]
      regs[18] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_319 = eq(io.wa, UInt<5>("h013")) @[RegFile.scala 23:21]
    node _T_320 = and(_T_319, io.RegWrite) @[RegFile.scala 23:34]
    when _T_320 : @[RegFile.scala 23:50]
      regs[19] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_322 = eq(io.wa, UInt<5>("h014")) @[RegFile.scala 23:21]
    node _T_323 = and(_T_322, io.RegWrite) @[RegFile.scala 23:34]
    when _T_323 : @[RegFile.scala 23:50]
      regs[20] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_325 = eq(io.wa, UInt<5>("h015")) @[RegFile.scala 23:21]
    node _T_326 = and(_T_325, io.RegWrite) @[RegFile.scala 23:34]
    when _T_326 : @[RegFile.scala 23:50]
      regs[21] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_328 = eq(io.wa, UInt<5>("h016")) @[RegFile.scala 23:21]
    node _T_329 = and(_T_328, io.RegWrite) @[RegFile.scala 23:34]
    when _T_329 : @[RegFile.scala 23:50]
      regs[22] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_331 = eq(io.wa, UInt<5>("h017")) @[RegFile.scala 23:21]
    node _T_332 = and(_T_331, io.RegWrite) @[RegFile.scala 23:34]
    when _T_332 : @[RegFile.scala 23:50]
      regs[23] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_334 = eq(io.wa, UInt<5>("h018")) @[RegFile.scala 23:21]
    node _T_335 = and(_T_334, io.RegWrite) @[RegFile.scala 23:34]
    when _T_335 : @[RegFile.scala 23:50]
      regs[24] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_337 = eq(io.wa, UInt<5>("h019")) @[RegFile.scala 23:21]
    node _T_338 = and(_T_337, io.RegWrite) @[RegFile.scala 23:34]
    when _T_338 : @[RegFile.scala 23:50]
      regs[25] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_340 = eq(io.wa, UInt<5>("h01a")) @[RegFile.scala 23:21]
    node _T_341 = and(_T_340, io.RegWrite) @[RegFile.scala 23:34]
    when _T_341 : @[RegFile.scala 23:50]
      regs[26] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_343 = eq(io.wa, UInt<5>("h01b")) @[RegFile.scala 23:21]
    node _T_344 = and(_T_343, io.RegWrite) @[RegFile.scala 23:34]
    when _T_344 : @[RegFile.scala 23:50]
      regs[27] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_346 = eq(io.wa, UInt<5>("h01c")) @[RegFile.scala 23:21]
    node _T_347 = and(_T_346, io.RegWrite) @[RegFile.scala 23:34]
    when _T_347 : @[RegFile.scala 23:50]
      regs[28] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_349 = eq(io.wa, UInt<5>("h01d")) @[RegFile.scala 23:21]
    node _T_350 = and(_T_349, io.RegWrite) @[RegFile.scala 23:34]
    when _T_350 : @[RegFile.scala 23:50]
      regs[29] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_352 = eq(io.wa, UInt<5>("h01e")) @[RegFile.scala 23:21]
    node _T_353 = and(_T_352, io.RegWrite) @[RegFile.scala 23:34]
    when _T_353 : @[RegFile.scala 23:50]
      regs[30] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node _T_355 = eq(io.wa, UInt<5>("h01f")) @[RegFile.scala 23:21]
    node _T_356 = and(_T_355, io.RegWrite) @[RegFile.scala 23:34]
    when _T_356 : @[RegFile.scala 23:50]
      regs[31] <= io.wd @[RegFile.scala 24:21]
      skip @[RegFile.scala 23:50]
    node raZero = eq(io.ra_a, UInt<1>("h00")) @[RegFile.scala 33:27]
    node rbZero = eq(io.ra_b, UInt<1>("h00")) @[RegFile.scala 34:27]
    node rcZero = eq(io.ra_c, UInt<1>("h00")) @[RegFile.scala 35:27]
    node _T_364 = mux(raZero, UInt<1>("h00"), regs[io.ra_a]) @[RegFile.scala 36:19]
    io.rd_a <= _T_364 @[RegFile.scala 36:13]
    node _T_369 = mux(rbZero, UInt<1>("h00"), regs[io.ra_b]) @[RegFile.scala 37:19]
    io.rd_b <= _T_369 @[RegFile.scala 37:13]
    node _T_374 = mux(rcZero, UInt<1>("h00"), regs[io.ra_c]) @[RegFile.scala 38:19]
    io.rd_c <= _T_374 @[RegFile.scala 38:13]
    
  module Datapath : 
    input clock : Clock
    input reset : UInt<1>
    output io : {ctrl : {Inst : UInt<32>, flip IRWrite : UInt<1>, flip RegDst : UInt<2>, flip RegWrite : UInt<1>, flip ALUSrcA : UInt<2>, flip ALUSrcB : UInt<3>, flip ALUOp : UInt<4>, flip PCSource : UInt<2>, flip PCWriteBEQ : UInt<1>, flip PCWriteBNE : UInt<1>, flip PCWrite : UInt<1>, flip IorD : UInt<1>, flip MemRead : UInt<1>, flip MemWrite : UInt<1>, flip MemtoReg : UInt<2>}, mem : {flip mem_rdata : UInt<32>, mem_addr : UInt<32>, mem_wdata : UInt<32>, mem_wen : UInt<1>, mem_addr2 : UInt<32>, flip mem_rdata2 : UInt<32>}, debug : {ir : UInt<32>, mdr : UInt<32>, aluout : UInt<32>, pc : UInt<32>, flip ra_c : UInt<5>, rd_c : UInt<32>, flip mr_a : UInt<32>, mr_d : UInt<32>}}
    
    inst alu of ALU @[Datapath.scala 26:21]
    alu.clock <= clock
    alu.reset <= reset
    inst regFile of RegFile @[Datapath.scala 27:25]
    regFile.clock <= clock
    regFile.reset <= reset
    reg ir : UInt<32>, clock with : (reset => (reset, UInt<32>("h020000000"))) @[Datapath.scala 32:21]
    when io.ctrl.IRWrite : @[Datapath.scala 33:28]
      ir <= io.mem.mem_rdata @[Datapath.scala 34:12]
      skip @[Datapath.scala 33:28]
    io.ctrl.Inst <= ir @[Datapath.scala 36:18]
    reg mdr : UInt, clock @[Datapath.scala 39:22]
    mdr <= io.mem.mem_rdata @[Datapath.scala 39:22]
    reg aluout : UInt, clock @[Datapath.scala 42:25]
    aluout <= alu.io.out @[Datapath.scala 42:25]
    reg pc : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Datapath.scala 45:21]
    node _T_69 = and(io.ctrl.PCWriteBEQ, alu.io.flagZero) @[Datapath.scala 46:32]
    node _T_71 = eq(alu.io.flagZero, UInt<1>("h00")) @[Datapath.scala 47:36]
    node _T_72 = and(io.ctrl.PCWriteBNE, _T_71) @[Datapath.scala 47:32]
    node _T_73 = or(_T_69, _T_72) @[Datapath.scala 46:55]
    node _T_74 = or(_T_73, io.ctrl.PCWrite) @[Datapath.scala 47:55]
    when _T_74 : @[Datapath.scala 48:31]
      node _T_80 = bits(pc, 31, 28) @[Datapath.scala 52:40]
      node _T_81 = bits(ir, 25, 0) @[Datapath.scala 52:52]
      node _T_82 = shl(_T_81, 2) @[Datapath.scala 52:59]
      node _T_83 = cat(_T_80, _T_82) @[Cat.scala 30:58]
      node _T_84 = eq(UInt<2>("h03"), io.ctrl.PCSource) @[Mux.scala 46:19]
      node _T_85 = mux(_T_84, regFile.io.rd_a, UInt<32>("h00")) @[Mux.scala 46:16]
      node _T_86 = eq(UInt<2>("h02"), io.ctrl.PCSource) @[Mux.scala 46:19]
      node _T_87 = mux(_T_86, _T_83, _T_85) @[Mux.scala 46:16]
      node _T_88 = eq(UInt<2>("h01"), io.ctrl.PCSource) @[Mux.scala 46:19]
      node _T_89 = mux(_T_88, aluout, _T_87) @[Mux.scala 46:16]
      node _T_90 = eq(UInt<2>("h00"), io.ctrl.PCSource) @[Mux.scala 46:19]
      node _T_91 = mux(_T_90, alu.io.out, _T_89) @[Mux.scala 46:16]
      pc <= _T_91 @[Datapath.scala 49:12]
      skip @[Datapath.scala 48:31]
    node _T_92 = bits(ir, 25, 21) @[Datapath.scala 58:26]
    regFile.io.ra_a <= _T_92 @[Datapath.scala 58:21]
    node _T_93 = bits(ir, 20, 16) @[Datapath.scala 59:26]
    regFile.io.ra_b <= _T_93 @[Datapath.scala 59:21]
    node _T_98 = bits(ir, 20, 16) @[Datapath.scala 62:33]
    node _T_99 = bits(ir, 15, 11) @[Datapath.scala 63:33]
    node _T_101 = eq(UInt<2>("h02"), io.ctrl.RegDst) @[Mux.scala 46:19]
    node _T_102 = mux(_T_101, UInt<5>("h01f"), UInt<5>("h00")) @[Mux.scala 46:16]
    node _T_103 = eq(UInt<2>("h01"), io.ctrl.RegDst) @[Mux.scala 46:19]
    node _T_104 = mux(_T_103, _T_99, _T_102) @[Mux.scala 46:16]
    node _T_105 = eq(UInt<2>("h00"), io.ctrl.RegDst) @[Mux.scala 46:19]
    node _T_106 = mux(_T_105, _T_98, _T_104) @[Mux.scala 46:16]
    regFile.io.wa <= _T_106 @[Datapath.scala 61:21]
    node _T_112 = bits(ir, 15, 0) @[Datapath.scala 70:45]
    node _T_114 = cat(_T_112, UInt<16>("h00")) @[Cat.scala 30:58]
    node _T_115 = eq(UInt<2>("h03"), io.ctrl.MemtoReg) @[Mux.scala 46:19]
    node _T_116 = mux(_T_115, _T_114, UInt<32>("h00")) @[Mux.scala 46:16]
    node _T_117 = eq(UInt<2>("h02"), io.ctrl.MemtoReg) @[Mux.scala 46:19]
    node _T_118 = mux(_T_117, pc, _T_116) @[Mux.scala 46:16]
    node _T_119 = eq(UInt<2>("h01"), io.ctrl.MemtoReg) @[Mux.scala 46:19]
    node _T_120 = mux(_T_119, mdr, _T_118) @[Mux.scala 46:16]
    node _T_121 = eq(UInt<2>("h00"), io.ctrl.MemtoReg) @[Mux.scala 46:19]
    node _T_122 = mux(_T_121, aluout, _T_120) @[Mux.scala 46:16]
    regFile.io.wd <= _T_122 @[Datapath.scala 66:21]
    regFile.io.RegWrite <= io.ctrl.RegWrite @[Datapath.scala 74:25]
    node _T_127 = eq(UInt<2>("h02"), io.ctrl.ALUSrcA) @[Mux.scala 46:19]
    node _T_128 = mux(_T_127, regFile.io.rd_b, UInt<1>("h00")) @[Mux.scala 46:16]
    node _T_129 = eq(UInt<2>("h01"), io.ctrl.ALUSrcA) @[Mux.scala 46:19]
    node _T_130 = mux(_T_129, regFile.io.rd_a, _T_128) @[Mux.scala 46:16]
    node _T_131 = eq(UInt<2>("h00"), io.ctrl.ALUSrcA) @[Mux.scala 46:19]
    node _T_132 = mux(_T_131, pc, _T_130) @[Mux.scala 46:16]
    alu.io.A <= _T_132 @[Datapath.scala 83:14]
    node _T_141 = bits(ir, 15, 0) @[Datapath.scala 91:40]
    wire _T_143 : SInt<32> @[Datapath.scala 77:21]
    node _T_144 = asSInt(_T_141) @[Datapath.scala 78:16]
    _T_143 <= _T_144 @[Datapath.scala 78:11]
    node _T_145 = asUInt(_T_143) @[Datapath.scala 79:11]
    node _T_146 = bits(ir, 15, 0) @[Datapath.scala 92:41]
    node _T_147 = shl(_T_146, 2) @[Datapath.scala 92:48]
    wire _T_149 : SInt<32> @[Datapath.scala 77:21]
    node _T_150 = asSInt(_T_147) @[Datapath.scala 78:16]
    _T_149 <= _T_150 @[Datapath.scala 78:11]
    node _T_151 = asUInt(_T_149) @[Datapath.scala 79:11]
    node _T_152 = bits(ir, 15, 0) @[Datapath.scala 93:32]
    node _T_153 = bits(ir, 10, 6) @[Datapath.scala 94:32]
    node _T_154 = eq(UInt<3>("h05"), io.ctrl.ALUSrcB) @[Mux.scala 46:19]
    node _T_155 = mux(_T_154, _T_153, UInt<1>("h00")) @[Mux.scala 46:16]
    node _T_156 = eq(UInt<3>("h04"), io.ctrl.ALUSrcB) @[Mux.scala 46:19]
    node _T_157 = mux(_T_156, _T_152, _T_155) @[Mux.scala 46:16]
    node _T_158 = eq(UInt<3>("h03"), io.ctrl.ALUSrcB) @[Mux.scala 46:19]
    node _T_159 = mux(_T_158, _T_151, _T_157) @[Mux.scala 46:16]
    node _T_160 = eq(UInt<3>("h02"), io.ctrl.ALUSrcB) @[Mux.scala 46:19]
    node _T_161 = mux(_T_160, _T_145, _T_159) @[Mux.scala 46:16]
    node _T_162 = eq(UInt<3>("h01"), io.ctrl.ALUSrcB) @[Mux.scala 46:19]
    node _T_163 = mux(_T_162, UInt<32>("h04"), _T_161) @[Mux.scala 46:16]
    node _T_164 = eq(UInt<3>("h00"), io.ctrl.ALUSrcB) @[Mux.scala 46:19]
    node _T_165 = mux(_T_164, regFile.io.rd_b, _T_163) @[Mux.scala 46:16]
    alu.io.B <= _T_165 @[Datapath.scala 88:14]
    alu.io.opcode <= io.ctrl.ALUOp @[Datapath.scala 96:19]
    node _T_166 = mux(io.ctrl.IorD, aluout, pc) @[Datapath.scala 101:28]
    io.mem.mem_addr <= _T_166 @[Datapath.scala 101:22]
    io.mem.mem_wdata <= regFile.io.rd_b @[Datapath.scala 102:22]
    io.mem.mem_wen <= io.ctrl.MemWrite @[Datapath.scala 103:22]
    io.debug.ir <= ir @[Datapath.scala 106:22]
    io.debug.mdr <= mdr @[Datapath.scala 107:22]
    io.debug.aluout <= aluout @[Datapath.scala 108:22]
    io.debug.pc <= pc @[Datapath.scala 109:22]
    regFile.io.ra_c <= io.debug.ra_c @[Datapath.scala 110:22]
    io.debug.rd_c <= regFile.io.rd_c @[Datapath.scala 111:22]
    io.mem.mem_addr2 <= io.debug.mr_a @[Datapath.scala 112:22]
    io.debug.mr_d <= io.mem.mem_rdata2 @[Datapath.scala 113:22]
    
  module Control : 
    input clock : Clock
    input reset : UInt<1>
    input io : {base : {Inst : UInt<32>, flip IRWrite : UInt<1>, flip RegDst : UInt<2>, flip RegWrite : UInt<1>, flip ALUSrcA : UInt<2>, flip ALUSrcB : UInt<3>, flip ALUOp : UInt<4>, flip PCSource : UInt<2>, flip PCWriteBEQ : UInt<1>, flip PCWriteBNE : UInt<1>, flip PCWrite : UInt<1>, flip IorD : UInt<1>, flip MemRead : UInt<1>, flip MemWrite : UInt<1>, flip MemtoReg : UInt<2>}, SingleStep : UInt<1>, ctrl_dbg : {flip cur_state : UInt<4>, flip isRType : UInt<1>, flip isIType : UInt<1>, flip isJType : UInt<1>, flip isLW : UInt<1>, flip isSW : UInt<1>, flip isBEQ : UInt<1>, flip isBNE : UInt<1>}}
    
    wire isRType : UInt<1> @[Control.scala 135:23]
    wire isIType : UInt<1> @[Control.scala 136:23]
    wire isJType : UInt<1> @[Control.scala 137:23]
    wire isLW : UInt<1> @[Control.scala 138:23]
    wire isSW : UInt<1> @[Control.scala 139:23]
    wire isBEQ : UInt<1> @[Control.scala 140:23]
    wire isBNE : UInt<1> @[Control.scala 141:23]
    wire isLUI : UInt<1> @[Control.scala 142:23]
    wire isSLL : UInt<1> @[Control.scala 143:23]
    node _T_89 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 156:34]
    node _T_90 = eq(UInt<6>("h020"), _T_89) @[Control.scala 156:34]
    node _T_93 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 157:34]
    node _T_94 = eq(UInt<6>("h021"), _T_93) @[Control.scala 157:34]
    node _T_95 = or(_T_90, _T_94) @[Control.scala 156:43]
    node _T_98 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 158:34]
    node _T_99 = eq(UInt<6>("h024"), _T_98) @[Control.scala 158:34]
    node _T_100 = or(_T_95, _T_99) @[Control.scala 157:43]
    node _T_103 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 159:34]
    node _T_104 = eq(UInt<6>("h022"), _T_103) @[Control.scala 159:34]
    node _T_105 = or(_T_100, _T_104) @[Control.scala 158:43]
    node _T_108 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 160:34]
    node _T_109 = eq(UInt<6>("h025"), _T_108) @[Control.scala 160:34]
    node _T_110 = or(_T_105, _T_109) @[Control.scala 159:43]
    node _T_113 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 161:34]
    node _T_114 = eq(UInt<6>("h027"), _T_113) @[Control.scala 161:34]
    node _T_115 = or(_T_110, _T_114) @[Control.scala 160:43]
    node _T_118 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 162:34]
    node _T_119 = eq(UInt<6>("h026"), _T_118) @[Control.scala 162:34]
    node _T_120 = or(_T_115, _T_119) @[Control.scala 161:43]
    node _T_123 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 163:34]
    node _T_124 = eq(UInt<6>("h02a"), _T_123) @[Control.scala 163:34]
    node _T_125 = or(_T_120, _T_124) @[Control.scala 162:43]
    isRType <= _T_125 @[Control.scala 156:13]
    node _T_128 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 164:31]
    node _T_129 = eq(UInt<30>("h020000000"), _T_128) @[Control.scala 164:31]
    node _T_132 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 165:34]
    node _T_133 = eq(UInt<30>("h030000000"), _T_132) @[Control.scala 165:34]
    node _T_134 = or(_T_129, _T_133) @[Control.scala 164:41]
    node _T_137 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 166:34]
    node _T_138 = eq(UInt<30>("h034000000"), _T_137) @[Control.scala 166:34]
    node _T_139 = or(_T_134, _T_138) @[Control.scala 165:44]
    node _T_142 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 167:34]
    node _T_143 = eq(UInt<30>("h038000000"), _T_142) @[Control.scala 167:34]
    node _T_144 = or(_T_139, _T_143) @[Control.scala 166:44]
    node _T_147 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 168:34]
    node _T_148 = eq(UInt<30>("h028000000"), _T_147) @[Control.scala 168:34]
    node _T_149 = or(_T_144, _T_148) @[Control.scala 167:44]
    node _T_152 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 169:34]
    node _T_153 = eq(UInt<30>("h024000000"), _T_152) @[Control.scala 169:34]
    node _T_154 = or(_T_149, _T_153) @[Control.scala 168:44]
    node _T_157 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 170:34]
    node _T_158 = eq(UInt<30>("h02c000000"), _T_157) @[Control.scala 170:34]
    node _T_159 = or(_T_154, _T_158) @[Control.scala 169:45]
    isIType <= _T_159 @[Control.scala 164:13]
    node _T_162 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 171:31]
    node _T_163 = eq(UInt<28>("h08000000"), _T_162) @[Control.scala 171:31]
    node _T_166 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 171:55]
    node _T_167 = eq(UInt<28>("h0c000000"), _T_166) @[Control.scala 171:55]
    node _T_168 = or(_T_163, _T_167) @[Control.scala 171:38]
    node _T_171 = and(io.base.Inst, UInt<32>("h0fc1fffff")) @[Control.scala 171:81]
    node _T_172 = eq(UInt<4>("h08"), _T_171) @[Control.scala 171:81]
    node _T_173 = or(_T_168, _T_172) @[Control.scala 171:64]
    isJType <= _T_173 @[Control.scala 171:13]
    node _T_176 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 172:30]
    node _T_177 = eq(UInt<32>("h08c000000"), _T_176) @[Control.scala 172:30]
    isLW <= _T_177 @[Control.scala 172:13]
    node _T_180 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 173:30]
    node _T_181 = eq(UInt<32>("h0ac000000"), _T_180) @[Control.scala 173:30]
    isSW <= _T_181 @[Control.scala 173:13]
    node _T_184 = and(io.base.Inst, UInt<32>("h0ffe00000")) @[Control.scala 174:30]
    node _T_185 = eq(UInt<30>("h03c000000"), _T_184) @[Control.scala 174:30]
    isLUI <= _T_185 @[Control.scala 174:13]
    node _T_188 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 175:30]
    node _T_189 = eq(UInt<29>("h010000000"), _T_188) @[Control.scala 175:30]
    isBEQ <= _T_189 @[Control.scala 175:13]
    node _T_192 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 176:30]
    node _T_193 = eq(UInt<29>("h014000000"), _T_192) @[Control.scala 176:30]
    isBNE <= _T_193 @[Control.scala 176:13]
    node _T_196 = and(io.base.Inst, UInt<32>("h0ffe0003f")) @[Control.scala 177:30]
    node _T_197 = eq(UInt<1>("h00"), _T_196) @[Control.scala 177:30]
    isSLL <= _T_197 @[Control.scala 177:13]
    reg cur_state : UInt<5>, clock with : (reset => (reset, UInt<5>("h011"))) @[Control.scala 198:28]
    io.base.IRWrite <= UInt<1>("h00") @[Control.scala 180:30]
    io.base.RegDst <= UInt<1>("h00") @[Control.scala 181:30]
    io.base.RegWrite <= UInt<1>("h00") @[Control.scala 182:30]
    io.base.ALUSrcA <= UInt<2>("h00") @[Control.scala 183:30]
    io.base.ALUSrcB <= UInt<1>("h00") @[Control.scala 184:30]
    io.base.ALUOp <= UInt<1>("h00") @[Control.scala 185:30]
    io.base.PCSource <= UInt<1>("h00") @[Control.scala 186:30]
    io.base.PCWriteBEQ <= UInt<1>("h00") @[Control.scala 187:30]
    io.base.PCWriteBNE <= UInt<1>("h00") @[Control.scala 188:30]
    io.base.PCWrite <= UInt<1>("h00") @[Control.scala 189:30]
    io.base.IorD <= UInt<1>("h00") @[Control.scala 190:30]
    io.base.MemRead <= UInt<1>("h00") @[Control.scala 191:30]
    io.base.MemWrite <= UInt<1>("h00") @[Control.scala 192:30]
    io.base.MemtoReg <= UInt<1>("h00") @[Control.scala 193:30]
    node _T_212 = eq(UInt<5>("h00"), cur_state) @[Conditional.scala 37:30]
    when _T_212 : @[Conditional.scala 40:58]
      io.base.MemRead <= UInt<1>("h01") @[Control.scala 205:31]
      io.base.ALUSrcA <= UInt<2>("h00") @[Control.scala 206:31]
      io.base.IorD <= UInt<1>("h00") @[Control.scala 207:31]
      io.base.IRWrite <= UInt<1>("h01") @[Control.scala 208:31]
      io.base.ALUSrcB <= UInt<3>("h01") @[Control.scala 209:31]
      io.base.ALUOp <= UInt<4>("h00") @[Control.scala 210:31]
      node _T_218 = mux(io.SingleStep, UInt<1>("h00"), UInt<1>("h01")) @[Control.scala 211:37]
      io.base.PCWrite <= _T_218 @[Control.scala 211:31]
      io.base.PCSource <= UInt<2>("h00") @[Control.scala 212:31]
      node _T_219 = mux(io.SingleStep, UInt<5>("h012"), UInt<5>("h01")) @[Control.scala 215:32]
      cur_state <= _T_219 @[Control.scala 215:26]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_220 = eq(UInt<5>("h01"), cur_state) @[Conditional.scala 37:30]
      when _T_220 : @[Conditional.scala 39:67]
        io.base.ALUSrcA <= UInt<2>("h00") @[Control.scala 219:31]
        io.base.ALUSrcB <= UInt<3>("h03") @[Control.scala 220:31]
        io.base.ALUOp <= UInt<4>("h00") @[Control.scala 221:31]
        node _T_221 = mux(isLUI, UInt<5>("h0a"), UInt<5>("h010")) @[Mux.scala 61:16]
        node _T_222 = mux(isSLL, UInt<5>("h0f"), _T_221) @[Mux.scala 61:16]
        node _T_223 = mux(isBNE, UInt<5>("h0d"), _T_222) @[Mux.scala 61:16]
        node _T_224 = mux(isBEQ, UInt<5>("h0d"), _T_223) @[Mux.scala 61:16]
        node _T_225 = mux(isSW, UInt<5>("h02"), _T_224) @[Mux.scala 61:16]
        node _T_226 = mux(isLW, UInt<5>("h02"), _T_225) @[Mux.scala 61:16]
        node _T_227 = mux(isJType, UInt<5>("h0e"), _T_226) @[Mux.scala 61:16]
        node _T_228 = mux(isIType, UInt<5>("h0b"), _T_227) @[Mux.scala 61:16]
        node _T_229 = mux(isRType, UInt<5>("h08"), _T_228) @[Mux.scala 61:16]
        cur_state <= _T_229 @[Control.scala 223:23]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_230 = eq(UInt<5>("h02"), cur_state) @[Conditional.scala 37:30]
        when _T_230 : @[Conditional.scala 39:67]
          io.base.ALUSrcA <= UInt<2>("h01") @[Control.scala 237:31]
          io.base.ALUSrcB <= UInt<3>("h02") @[Control.scala 238:31]
          io.base.ALUOp <= UInt<4>("h00") @[Control.scala 239:31]
          node _T_231 = mux(isSW, UInt<5>("h06"), UInt<5>("h010")) @[Mux.scala 61:16]
          node _T_232 = mux(isLW, UInt<5>("h04"), _T_231) @[Mux.scala 61:16]
          cur_state <= _T_232 @[Control.scala 241:23]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_233 = eq(UInt<5>("h04"), cur_state) @[Conditional.scala 37:30]
          when _T_233 : @[Conditional.scala 39:67]
            io.base.ALUSrcA <= UInt<2>("h01") @[Control.scala 247:31]
            io.base.ALUSrcB <= UInt<3>("h02") @[Control.scala 248:31]
            io.base.ALUOp <= UInt<4>("h00") @[Control.scala 249:31]
            io.base.MemRead <= UInt<1>("h01") @[Control.scala 251:31]
            io.base.IorD <= UInt<1>("h01") @[Control.scala 252:31]
            cur_state <= UInt<5>("h03") @[Control.scala 254:23]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_236 = eq(UInt<5>("h06"), cur_state) @[Conditional.scala 37:30]
            when _T_236 : @[Conditional.scala 39:67]
              io.base.ALUSrcA <= UInt<2>("h01") @[Control.scala 258:31]
              io.base.ALUSrcB <= UInt<3>("h02") @[Control.scala 259:31]
              io.base.ALUOp <= UInt<4>("h00") @[Control.scala 260:31]
              io.base.MemRead <= UInt<1>("h01") @[Control.scala 262:31]
              io.base.IorD <= UInt<1>("h01") @[Control.scala 263:31]
              cur_state <= UInt<5>("h05") @[Control.scala 265:23]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_239 = eq(UInt<5>("h03"), cur_state) @[Conditional.scala 37:30]
              when _T_239 : @[Conditional.scala 39:67]
                io.base.MemRead <= UInt<1>("h01") @[Control.scala 269:31]
                io.base.IorD <= UInt<1>("h01") @[Control.scala 270:31]
                cur_state <= UInt<5>("h07") @[Control.scala 272:23]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_242 = eq(UInt<5>("h05"), cur_state) @[Conditional.scala 37:30]
                when _T_242 : @[Conditional.scala 39:67]
                  io.base.MemWrite <= UInt<1>("h01") @[Control.scala 276:31]
                  io.base.IorD <= UInt<1>("h01") @[Control.scala 277:31]
                  cur_state <= UInt<5>("h00") @[Control.scala 279:23]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_245 = eq(UInt<5>("h07"), cur_state) @[Conditional.scala 37:30]
                  when _T_245 : @[Conditional.scala 39:67]
                    io.base.RegDst <= UInt<2>("h00") @[Control.scala 283:31]
                    io.base.RegWrite <= UInt<1>("h01") @[Control.scala 284:31]
                    io.base.MemtoReg <= UInt<2>("h01") @[Control.scala 285:31]
                    cur_state <= UInt<5>("h00") @[Control.scala 287:23]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_247 = eq(UInt<5>("h08"), cur_state) @[Conditional.scala 37:30]
                    when _T_247 : @[Conditional.scala 39:67]
                      io.base.ALUSrcA <= UInt<2>("h01") @[Control.scala 291:31]
                      io.base.ALUSrcB <= UInt<3>("h00") @[Control.scala 292:31]
                      node _T_250 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 117:19]
                      node _T_251 = eq(UInt<6>("h02a"), _T_250) @[Control.scala 117:19]
                      node _T_252 = mux(_T_251, UInt<4>("h05"), UInt<4>("h0f")) @[Control.scala 117:16]
                      node _T_255 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 117:19]
                      node _T_256 = eq(UInt<6>("h026"), _T_255) @[Control.scala 117:19]
                      node _T_257 = mux(_T_256, UInt<4>("h04"), _T_252) @[Control.scala 117:16]
                      node _T_260 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 117:19]
                      node _T_261 = eq(UInt<6>("h027"), _T_260) @[Control.scala 117:19]
                      node _T_262 = mux(_T_261, UInt<4>("h0c"), _T_257) @[Control.scala 117:16]
                      node _T_265 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 117:19]
                      node _T_266 = eq(UInt<6>("h025"), _T_265) @[Control.scala 117:19]
                      node _T_267 = mux(_T_266, UInt<4>("h03"), _T_262) @[Control.scala 117:16]
                      node _T_270 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 117:19]
                      node _T_271 = eq(UInt<6>("h022"), _T_270) @[Control.scala 117:19]
                      node _T_272 = mux(_T_271, UInt<4>("h01"), _T_267) @[Control.scala 117:16]
                      node _T_275 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 117:19]
                      node _T_276 = eq(UInt<6>("h024"), _T_275) @[Control.scala 117:19]
                      node _T_277 = mux(_T_276, UInt<4>("h02"), _T_272) @[Control.scala 117:16]
                      node _T_280 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 117:19]
                      node _T_281 = eq(UInt<6>("h021"), _T_280) @[Control.scala 117:19]
                      node _T_282 = mux(_T_281, UInt<4>("h00"), _T_277) @[Control.scala 117:16]
                      node _T_285 = and(io.base.Inst, UInt<32>("h0fc0007ff")) @[Control.scala 117:19]
                      node _T_286 = eq(UInt<6>("h020"), _T_285) @[Control.scala 117:19]
                      node _T_287 = mux(_T_286, UInt<4>("h00"), _T_282) @[Control.scala 117:16]
                      io.base.ALUOp <= _T_287 @[Control.scala 293:31]
                      cur_state <= UInt<5>("h09") @[Control.scala 304:23]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_288 = eq(UInt<5>("h09"), cur_state) @[Conditional.scala 37:30]
                      when _T_288 : @[Conditional.scala 39:67]
                        io.base.RegDst <= UInt<2>("h01") @[Control.scala 308:31]
                        io.base.RegWrite <= UInt<1>("h01") @[Control.scala 309:31]
                        io.base.MemtoReg <= UInt<2>("h00") @[Control.scala 310:31]
                        cur_state <= UInt<5>("h00") @[Control.scala 312:23]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_290 = eq(UInt<5>("h0a"), cur_state) @[Conditional.scala 37:30]
                        when _T_290 : @[Conditional.scala 39:67]
                          io.base.RegDst <= UInt<2>("h00") @[Control.scala 315:31]
                          io.base.RegWrite <= UInt<1>("h01") @[Control.scala 316:31]
                          io.base.MemtoReg <= UInt<2>("h03") @[Control.scala 317:31]
                          cur_state <= UInt<5>("h00") @[Control.scala 319:23]
                          skip @[Conditional.scala 39:67]
                        else : @[Conditional.scala 39:67]
                          node _T_292 = eq(UInt<5>("h0f"), cur_state) @[Conditional.scala 37:30]
                          when _T_292 : @[Conditional.scala 39:67]
                            io.base.ALUSrcA <= UInt<2>("h02") @[Control.scala 322:31]
                            io.base.ALUSrcB <= UInt<3>("h05") @[Control.scala 323:31]
                            node _T_295 = and(io.base.Inst, UInt<32>("h0ffe0003f")) @[Control.scala 117:19]
                            node _T_296 = eq(UInt<1>("h00"), _T_295) @[Control.scala 117:19]
                            node _T_297 = mux(_T_296, UInt<4>("h06"), UInt<4>("h0f")) @[Control.scala 117:16]
                            io.base.ALUOp <= _T_297 @[Control.scala 324:31]
                            cur_state <= UInt<5>("h09") @[Control.scala 328:23]
                            skip @[Conditional.scala 39:67]
                          else : @[Conditional.scala 39:67]
                            node _T_298 = eq(UInt<5>("h0b"), cur_state) @[Conditional.scala 37:30]
                            when _T_298 : @[Conditional.scala 39:67]
                              io.base.ALUSrcA <= UInt<2>("h01") @[Control.scala 333:31]
                              node _T_301 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                              node _T_302 = eq(UInt<30>("h02c000000"), _T_301) @[Control.scala 117:19]
                              node _T_303 = mux(_T_302, UInt<3>("h02"), UInt<3>("h02")) @[Control.scala 117:16]
                              node _T_306 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                              node _T_307 = eq(UInt<30>("h028000000"), _T_306) @[Control.scala 117:19]
                              node _T_308 = mux(_T_307, UInt<3>("h02"), _T_303) @[Control.scala 117:16]
                              node _T_311 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                              node _T_312 = eq(UInt<30>("h038000000"), _T_311) @[Control.scala 117:19]
                              node _T_313 = mux(_T_312, UInt<3>("h04"), _T_308) @[Control.scala 117:16]
                              node _T_316 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                              node _T_317 = eq(UInt<30>("h034000000"), _T_316) @[Control.scala 117:19]
                              node _T_318 = mux(_T_317, UInt<3>("h04"), _T_313) @[Control.scala 117:16]
                              node _T_321 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                              node _T_322 = eq(UInt<30>("h030000000"), _T_321) @[Control.scala 117:19]
                              node _T_323 = mux(_T_322, UInt<3>("h04"), _T_318) @[Control.scala 117:16]
                              node _T_326 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                              node _T_327 = eq(UInt<30>("h024000000"), _T_326) @[Control.scala 117:19]
                              node _T_328 = mux(_T_327, UInt<3>("h02"), _T_323) @[Control.scala 117:16]
                              node _T_331 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                              node _T_332 = eq(UInt<30>("h020000000"), _T_331) @[Control.scala 117:19]
                              node _T_333 = mux(_T_332, UInt<3>("h02"), _T_328) @[Control.scala 117:16]
                              io.base.ALUSrcB <= _T_333 @[Control.scala 334:31]
                              node _T_336 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                              node _T_337 = eq(UInt<30>("h02c000000"), _T_336) @[Control.scala 117:19]
                              node _T_338 = mux(_T_337, UInt<4>("h07"), UInt<4>("h0f")) @[Control.scala 117:16]
                              node _T_341 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                              node _T_342 = eq(UInt<30>("h028000000"), _T_341) @[Control.scala 117:19]
                              node _T_343 = mux(_T_342, UInt<4>("h05"), _T_338) @[Control.scala 117:16]
                              node _T_346 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                              node _T_347 = eq(UInt<30>("h038000000"), _T_346) @[Control.scala 117:19]
                              node _T_348 = mux(_T_347, UInt<4>("h04"), _T_343) @[Control.scala 117:16]
                              node _T_351 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                              node _T_352 = eq(UInt<30>("h034000000"), _T_351) @[Control.scala 117:19]
                              node _T_353 = mux(_T_352, UInt<4>("h03"), _T_348) @[Control.scala 117:16]
                              node _T_356 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                              node _T_357 = eq(UInt<30>("h030000000"), _T_356) @[Control.scala 117:19]
                              node _T_358 = mux(_T_357, UInt<4>("h02"), _T_353) @[Control.scala 117:16]
                              node _T_361 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                              node _T_362 = eq(UInt<30>("h024000000"), _T_361) @[Control.scala 117:19]
                              node _T_363 = mux(_T_362, UInt<4>("h00"), _T_358) @[Control.scala 117:16]
                              node _T_366 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                              node _T_367 = eq(UInt<30>("h020000000"), _T_366) @[Control.scala 117:19]
                              node _T_368 = mux(_T_367, UInt<4>("h00"), _T_363) @[Control.scala 117:16]
                              io.base.ALUOp <= _T_368 @[Control.scala 343:31]
                              cur_state <= UInt<5>("h0c") @[Control.scala 353:23]
                              skip @[Conditional.scala 39:67]
                            else : @[Conditional.scala 39:67]
                              node _T_369 = eq(UInt<5>("h0c"), cur_state) @[Conditional.scala 37:30]
                              when _T_369 : @[Conditional.scala 39:67]
                                io.base.RegDst <= UInt<2>("h00") @[Control.scala 357:30]
                                io.base.RegWrite <= UInt<1>("h01") @[Control.scala 358:31]
                                io.base.MemtoReg <= UInt<2>("h00") @[Control.scala 359:31]
                                cur_state <= UInt<5>("h00") @[Control.scala 361:23]
                                skip @[Conditional.scala 39:67]
                              else : @[Conditional.scala 39:67]
                                node _T_371 = eq(UInt<5>("h0d"), cur_state) @[Conditional.scala 37:30]
                                when _T_371 : @[Conditional.scala 39:67]
                                  io.base.ALUSrcA <= UInt<2>("h01") @[Control.scala 365:32]
                                  io.base.ALUSrcB <= UInt<3>("h00") @[Control.scala 366:32]
                                  io.base.ALUOp <= UInt<4>("h01") @[Control.scala 367:32]
                                  io.base.PCWriteBEQ <= isBEQ @[Control.scala 368:32]
                                  io.base.PCWriteBNE <= isBNE @[Control.scala 369:32]
                                  io.base.PCSource <= UInt<2>("h01") @[Control.scala 370:32]
                                  cur_state <= UInt<5>("h00") @[Control.scala 372:23]
                                  skip @[Conditional.scala 39:67]
                                else : @[Conditional.scala 39:67]
                                  node _T_372 = eq(UInt<5>("h0e"), cur_state) @[Conditional.scala 37:30]
                                  when _T_372 : @[Conditional.scala 39:67]
                                    io.base.PCWrite <= UInt<1>("h01") @[Control.scala 377:31]
                                    node _T_376 = and(io.base.Inst, UInt<32>("h0fc1fffff")) @[Control.scala 117:19]
                                    node _T_377 = eq(UInt<4>("h08"), _T_376) @[Control.scala 117:19]
                                    node _T_378 = mux(_T_377, UInt<2>("h03"), UInt<2>("h02")) @[Control.scala 117:16]
                                    node _T_381 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                                    node _T_382 = eq(UInt<28>("h08000000"), _T_381) @[Control.scala 117:19]
                                    node _T_383 = mux(_T_382, UInt<2>("h02"), _T_378) @[Control.scala 117:16]
                                    node _T_386 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                                    node _T_387 = eq(UInt<28>("h0c000000"), _T_386) @[Control.scala 117:19]
                                    node _T_388 = mux(_T_387, UInt<2>("h02"), _T_383) @[Control.scala 117:16]
                                    io.base.PCSource <= _T_388 @[Control.scala 379:31]
                                    node _T_395 = and(io.base.Inst, UInt<32>("h0fc1fffff")) @[Control.scala 117:19]
                                    node _T_396 = eq(UInt<4>("h08"), _T_395) @[Control.scala 117:19]
                                    node _T_397 = mux(_T_396, UInt<1>("h00"), UInt<1>("h00")) @[Control.scala 117:16]
                                    node _T_400 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                                    node _T_401 = eq(UInt<28>("h08000000"), _T_400) @[Control.scala 117:19]
                                    node _T_402 = mux(_T_401, UInt<1>("h00"), _T_397) @[Control.scala 117:16]
                                    node _T_405 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                                    node _T_406 = eq(UInt<28>("h0c000000"), _T_405) @[Control.scala 117:19]
                                    node _T_407 = mux(_T_406, UInt<1>("h01"), _T_402) @[Control.scala 117:16]
                                    io.base.RegWrite <= _T_407 @[Control.scala 385:31]
                                    node _T_413 = and(io.base.Inst, UInt<32>("h0fc1fffff")) @[Control.scala 117:19]
                                    node _T_414 = eq(UInt<4>("h08"), _T_413) @[Control.scala 117:19]
                                    node _T_415 = mux(_T_414, UInt<1>("h00"), UInt<1>("h00")) @[Control.scala 117:16]
                                    node _T_418 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                                    node _T_419 = eq(UInt<28>("h08000000"), _T_418) @[Control.scala 117:19]
                                    node _T_420 = mux(_T_419, UInt<1>("h00"), _T_415) @[Control.scala 117:16]
                                    node _T_423 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                                    node _T_424 = eq(UInt<28>("h0c000000"), _T_423) @[Control.scala 117:19]
                                    node _T_425 = mux(_T_424, UInt<2>("h02"), _T_420) @[Control.scala 117:16]
                                    io.base.RegDst <= _T_425 @[Control.scala 390:31]
                                    node _T_431 = and(io.base.Inst, UInt<32>("h0fc1fffff")) @[Control.scala 117:19]
                                    node _T_432 = eq(UInt<4>("h08"), _T_431) @[Control.scala 117:19]
                                    node _T_433 = mux(_T_432, UInt<1>("h00"), UInt<1>("h00")) @[Control.scala 117:16]
                                    node _T_436 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                                    node _T_437 = eq(UInt<28>("h08000000"), _T_436) @[Control.scala 117:19]
                                    node _T_438 = mux(_T_437, UInt<1>("h00"), _T_433) @[Control.scala 117:16]
                                    node _T_441 = and(io.base.Inst, UInt<32>("h0fc000000")) @[Control.scala 117:19]
                                    node _T_442 = eq(UInt<28>("h0c000000"), _T_441) @[Control.scala 117:19]
                                    node _T_443 = mux(_T_442, UInt<2>("h02"), _T_438) @[Control.scala 117:16]
                                    io.base.MemtoReg <= _T_443 @[Control.scala 396:31]
                                    cur_state <= UInt<5>("h00") @[Control.scala 402:23]
                                    skip @[Conditional.scala 39:67]
                                  else : @[Conditional.scala 39:67]
                                    node _T_444 = eq(UInt<5>("h010"), cur_state) @[Conditional.scala 37:30]
                                    when _T_444 : @[Conditional.scala 39:67]
                                      cur_state <= UInt<5>("h010") @[Control.scala 407:23]
                                      skip @[Conditional.scala 39:67]
                                    else : @[Conditional.scala 39:67]
                                      node _T_445 = eq(UInt<5>("h011"), cur_state) @[Conditional.scala 37:30]
                                      when _T_445 : @[Conditional.scala 39:67]
                                        cur_state <= UInt<5>("h00") @[Control.scala 411:23]
                                        skip @[Conditional.scala 39:67]
                                      else : @[Conditional.scala 39:67]
                                        node _T_446 = eq(UInt<5>("h012"), cur_state) @[Conditional.scala 37:30]
                                        when _T_446 : @[Conditional.scala 39:67]
                                          io.base.MemRead <= UInt<1>("h01") @[Control.scala 418:31]
                                          io.base.ALUSrcA <= UInt<2>("h00") @[Control.scala 419:31]
                                          io.base.IorD <= UInt<1>("h00") @[Control.scala 420:31]
                                          io.base.IRWrite <= UInt<1>("h01") @[Control.scala 421:31]
                                          io.base.ALUSrcB <= UInt<3>("h01") @[Control.scala 422:31]
                                          io.base.ALUOp <= UInt<4>("h00") @[Control.scala 423:31]
                                          node _T_452 = mux(io.SingleStep, UInt<1>("h00"), UInt<1>("h01")) @[Control.scala 425:37]
                                          io.base.PCWrite <= _T_452 @[Control.scala 425:31]
                                          io.base.PCSource <= UInt<2>("h00") @[Control.scala 426:31]
                                          node _T_453 = mux(io.SingleStep, UInt<5>("h012"), UInt<5>("h01")) @[Control.scala 428:29]
                                          cur_state <= _T_453 @[Control.scala 428:23]
                                          skip @[Conditional.scala 39:67]
    io.ctrl_dbg.cur_state <= cur_state @[Control.scala 435:27]
    io.ctrl_dbg.isRType <= isRType @[Control.scala 436:27]
    io.ctrl_dbg.isIType <= isIType @[Control.scala 437:27]
    io.ctrl_dbg.isJType <= isJType @[Control.scala 438:27]
    io.ctrl_dbg.isLW <= isLW @[Control.scala 439:27]
    io.ctrl_dbg.isSW <= isSW @[Control.scala 440:27]
    io.ctrl_dbg.isBEQ <= isBEQ @[Control.scala 441:27]
    io.ctrl_dbg.isBNE <= isBNE @[Control.scala 442:27]
    
  module CPU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {debug : {ir : UInt<32>, mdr : UInt<32>, aluout : UInt<32>, pc : UInt<32>, flip ra_c : UInt<5>, rd_c : UInt<32>, flip mr_a : UInt<32>, mr_d : UInt<32>}, flip ctrl_dbg : {flip cur_state : UInt<4>, flip isRType : UInt<1>, flip isIType : UInt<1>, flip isJType : UInt<1>, flip isLW : UInt<1>, flip isSW : UInt<1>, flip isBEQ : UInt<1>, flip isBNE : UInt<1>}, mem_port : {flip mem_rdata : UInt<32>, mem_addr : UInt<32>, mem_wdata : UInt<32>, mem_wen : UInt<1>, mem_addr2 : UInt<32>, flip mem_rdata2 : UInt<32>}, flip single : UInt<1>}
    
    inst datapath of Datapath @[CPU.scala 15:26]
    datapath.clock <= clock
    datapath.reset <= reset
    io.debug.mr_d <= datapath.io.debug.mr_d @[CPU.scala 16:14]
    datapath.io.debug.mr_a <= io.debug.mr_a @[CPU.scala 16:14]
    io.debug.rd_c <= datapath.io.debug.rd_c @[CPU.scala 16:14]
    datapath.io.debug.ra_c <= io.debug.ra_c @[CPU.scala 16:14]
    io.debug.pc <= datapath.io.debug.pc @[CPU.scala 16:14]
    io.debug.aluout <= datapath.io.debug.aluout @[CPU.scala 16:14]
    io.debug.mdr <= datapath.io.debug.mdr @[CPU.scala 16:14]
    io.debug.ir <= datapath.io.debug.ir @[CPU.scala 16:14]
    inst ctrl of Control @[CPU.scala 18:22]
    ctrl.clock <= clock
    ctrl.reset <= reset
    datapath.io.ctrl.MemtoReg <= ctrl.io.base.MemtoReg @[CPU.scala 19:18]
    datapath.io.ctrl.MemWrite <= ctrl.io.base.MemWrite @[CPU.scala 19:18]
    datapath.io.ctrl.MemRead <= ctrl.io.base.MemRead @[CPU.scala 19:18]
    datapath.io.ctrl.IorD <= ctrl.io.base.IorD @[CPU.scala 19:18]
    datapath.io.ctrl.PCWrite <= ctrl.io.base.PCWrite @[CPU.scala 19:18]
    datapath.io.ctrl.PCWriteBNE <= ctrl.io.base.PCWriteBNE @[CPU.scala 19:18]
    datapath.io.ctrl.PCWriteBEQ <= ctrl.io.base.PCWriteBEQ @[CPU.scala 19:18]
    datapath.io.ctrl.PCSource <= ctrl.io.base.PCSource @[CPU.scala 19:18]
    datapath.io.ctrl.ALUOp <= ctrl.io.base.ALUOp @[CPU.scala 19:18]
    datapath.io.ctrl.ALUSrcB <= ctrl.io.base.ALUSrcB @[CPU.scala 19:18]
    datapath.io.ctrl.ALUSrcA <= ctrl.io.base.ALUSrcA @[CPU.scala 19:18]
    datapath.io.ctrl.RegWrite <= ctrl.io.base.RegWrite @[CPU.scala 19:18]
    datapath.io.ctrl.RegDst <= ctrl.io.base.RegDst @[CPU.scala 19:18]
    datapath.io.ctrl.IRWrite <= ctrl.io.base.IRWrite @[CPU.scala 19:18]
    ctrl.io.base.Inst <= datapath.io.ctrl.Inst @[CPU.scala 19:18]
    io.ctrl_dbg.isBNE <= ctrl.io.ctrl_dbg.isBNE @[CPU.scala 20:17]
    io.ctrl_dbg.isBEQ <= ctrl.io.ctrl_dbg.isBEQ @[CPU.scala 20:17]
    io.ctrl_dbg.isSW <= ctrl.io.ctrl_dbg.isSW @[CPU.scala 20:17]
    io.ctrl_dbg.isLW <= ctrl.io.ctrl_dbg.isLW @[CPU.scala 20:17]
    io.ctrl_dbg.isJType <= ctrl.io.ctrl_dbg.isJType @[CPU.scala 20:17]
    io.ctrl_dbg.isIType <= ctrl.io.ctrl_dbg.isIType @[CPU.scala 20:17]
    io.ctrl_dbg.isRType <= ctrl.io.ctrl_dbg.isRType @[CPU.scala 20:17]
    io.ctrl_dbg.cur_state <= ctrl.io.ctrl_dbg.cur_state @[CPU.scala 20:17]
    ctrl.io.SingleStep <= io.single @[CPU.scala 21:24]
    datapath.io.mem.mem_rdata2 <= io.mem_port.mem_rdata2 @[CPU.scala 23:17]
    io.mem_port.mem_addr2 <= datapath.io.mem.mem_addr2 @[CPU.scala 23:17]
    io.mem_port.mem_wen <= datapath.io.mem.mem_wen @[CPU.scala 23:17]
    io.mem_port.mem_wdata <= datapath.io.mem.mem_wdata @[CPU.scala 23:17]
    io.mem_port.mem_addr <= datapath.io.mem.mem_addr @[CPU.scala 23:17]
    datapath.io.mem.mem_rdata <= io.mem_port.mem_rdata @[CPU.scala 23:17]
    
  module MMap : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip mmap_port : {flip mem_rdata : UInt<32>, mem_addr : UInt<32>, mem_wdata : UInt<32>, mem_wen : UInt<1>, mem_addr2 : UInt<32>, flip mem_rdata2 : UInt<32>}, mem_port : {flip mem_rdata : UInt<32>, mem_addr : UInt<32>, mem_wdata : UInt<32>, mem_wen : UInt<1>, mem_addr2 : UInt<32>, flip mem_rdata2 : UInt<32>}, uart_port : {flip mem_rdata : UInt<32>, mem_wdata : UInt<32>, mem_wen : UInt<1>}, vram_port : {mem_addr : UInt<32>, mem_wdata : UInt<16>, mem_wen : UInt<1>}}
    
    node _T_56 = geq(io.mmap_port.mem_addr, UInt<1>("h00")) @[MMap.scala 46:47]
    node _T_58 = lt(io.mmap_port.mem_addr, UInt<11>("h0400")) @[MMap.scala 46:81]
    node addr_in_mem = and(_T_56, _T_58) @[MMap.scala 46:55]
    node addr_in_uart = eq(io.mmap_port.mem_addr, UInt<16>("h0ff00")) @[MMap.scala 47:47]
    node _T_61 = geq(io.mmap_port.mem_addr, UInt<14>("h03000")) @[MMap.scala 48:47]
    node _T_63 = lt(io.mmap_port.mem_addr, UInt<15>("h04f41")) @[MMap.scala 48:85]
    node addr_in_vram = and(_T_61, _T_63) @[MMap.scala 48:59]
    node _T_66 = mux(addr_in_vram, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 61:16]
    node _T_67 = mux(addr_in_uart, io.uart_port.mem_rdata, _T_66) @[Mux.scala 61:16]
    node _T_68 = mux(addr_in_mem, io.mem_port.mem_rdata, _T_67) @[Mux.scala 61:16]
    io.mmap_port.mem_rdata <= _T_68 @[MMap.scala 50:28]
    io.mem_port.mem_addr <= io.mmap_port.mem_addr @[MMap.scala 57:27]
    io.mem_port.mem_wdata <= io.mmap_port.mem_wdata @[MMap.scala 58:27]
    node _T_69 = and(io.mmap_port.mem_wen, addr_in_mem) @[MMap.scala 59:52]
    io.mem_port.mem_wen <= _T_69 @[MMap.scala 59:27]
    io.mem_port.mem_addr2 <= io.mmap_port.mem_addr2 @[MMap.scala 60:27]
    io.mmap_port.mem_rdata2 <= io.mem_port.mem_rdata2 @[MMap.scala 62:29]
    io.uart_port.mem_wdata <= io.mmap_port.mem_wdata @[MMap.scala 65:28]
    node _T_70 = and(io.mmap_port.mem_wen, addr_in_uart) @[MMap.scala 66:53]
    io.uart_port.mem_wen <= _T_70 @[MMap.scala 66:28]
    node _T_72 = sub(io.mmap_port.mem_addr, UInt<14>("h03000")) @[MMap.scala 68:53]
    node _T_73 = asUInt(_T_72) @[MMap.scala 68:53]
    node _T_74 = tail(_T_73, 1) @[MMap.scala 68:53]
    node _T_75 = shr(_T_74, 2) @[MMap.scala 68:64]
    io.vram_port.mem_addr <= _T_75 @[MMap.scala 68:27]
    node _T_76 = bits(io.mmap_port.mem_wdata, 15, 0) @[MMap.scala 69:53]
    io.vram_port.mem_wdata <= _T_76 @[MMap.scala 69:28]
    node _T_77 = and(io.mmap_port.mem_wen, addr_in_vram) @[MMap.scala 70:53]
    io.vram_port.mem_wen <= _T_77 @[MMap.scala 70:28]
    
  module Mem : 
    input clock : Clock
    input reset : UInt<1>
    input io : {flip mem_rdata : UInt<32>, mem_addr : UInt<32>, mem_wdata : UInt<32>, mem_wen : UInt<1>, mem_addr2 : UInt<32>, flip mem_rdata2 : UInt<32>}
    
    wire _T_283 : UInt<32>[256] @[Mem.scala 58:34]
    _T_283[0] <= UInt<32>("h0201d03fc") @[Mem.scala 58:34]
    _T_283[1] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[2] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[3] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[4] <= UInt<32>("h027bdffd8") @[Mem.scala 58:34]
    _T_283[5] <= UInt<32>("h0afbf0024") @[Mem.scala 58:34]
    _T_283[6] <= UInt<32>("h0afbe0020") @[Mem.scala 58:34]
    _T_283[7] <= UInt<32>("h03a0f025") @[Mem.scala 58:34]
    _T_283[8] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[9] <= UInt<32>("h0ac400350") @[Mem.scala 58:34]
    _T_283[10] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[11] <= UInt<32>("h0ac400354") @[Mem.scala 58:34]
    _T_283[12] <= UInt<32>("h024040f3e") @[Mem.scala 58:34]
    _T_283[13] <= UInt<32>("h0c000076") @[Mem.scala 58:34]
    _T_283[14] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[15] <= UInt<32>("h0c0000af") @[Mem.scala 58:34]
    _T_283[16] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[17] <= UInt<32>("h0afc2001c") @[Mem.scala 58:34]
    _T_283[18] <= UInt<32>("h08fc3001c") @[Mem.scala 58:34]
    _T_283[19] <= UInt<32>("h02402000a") @[Mem.scala 58:34]
    _T_283[20] <= UInt<32>("h010620005") @[Mem.scala 58:34]
    _T_283[21] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[22] <= UInt<32>("h08fc3001c") @[Mem.scala 58:34]
    _T_283[23] <= UInt<32>("h02402000d") @[Mem.scala 58:34]
    _T_283[24] <= UInt<32>("h01462000b") @[Mem.scala 58:34]
    _T_283[25] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[26] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[27] <= UInt<32>("h0ac400350") @[Mem.scala 58:34]
    _T_283[28] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[29] <= UInt<32>("h08c420354") @[Mem.scala 58:34]
    _T_283[30] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[31] <= UInt<32>("h024430001") @[Mem.scala 58:34]
    _T_283[32] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[33] <= UInt<32>("h0ac430354") @[Mem.scala 58:34]
    _T_283[34] <= UInt<32>("h010000051") @[Mem.scala 58:34]
    _T_283[35] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[36] <= UInt<32>("h08fc3001c") @[Mem.scala 58:34]
    _T_283[37] <= UInt<32>("h024020008") @[Mem.scala 58:34]
    _T_283[38] <= UInt<32>("h01462002e") @[Mem.scala 58:34]
    _T_283[39] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[40] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[41] <= UInt<32>("h08c420350") @[Mem.scala 58:34]
    _T_283[42] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[43] <= UInt<32>("h014400018") @[Mem.scala 58:34]
    _T_283[44] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[45] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[46] <= UInt<32>("h024030018") @[Mem.scala 58:34]
    _T_283[47] <= UInt<32>("h0ac430350") @[Mem.scala 58:34]
    _T_283[48] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[49] <= UInt<32>("h08c420354") @[Mem.scala 58:34]
    _T_283[50] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[51] <= UInt<32>("h02443ffff") @[Mem.scala 58:34]
    _T_283[52] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[53] <= UInt<32>("h0ac430354") @[Mem.scala 58:34]
    _T_283[54] <= UInt<32>("h024040f20") @[Mem.scala 58:34]
    _T_283[55] <= UInt<32>("h0c000076") @[Mem.scala 58:34]
    _T_283[56] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[57] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[58] <= UInt<32>("h024030018") @[Mem.scala 58:34]
    _T_283[59] <= UInt<32>("h0ac430350") @[Mem.scala 58:34]
    _T_283[60] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[61] <= UInt<32>("h08c420354") @[Mem.scala 58:34]
    _T_283[62] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[63] <= UInt<32>("h02443ffff") @[Mem.scala 58:34]
    _T_283[64] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[65] <= UInt<32>("h0ac430354") @[Mem.scala 58:34]
    _T_283[66] <= UInt<32>("h01000ffcc") @[Mem.scala 58:34]
    _T_283[67] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[68] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[69] <= UInt<32>("h08c420350") @[Mem.scala 58:34]
    _T_283[70] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[71] <= UInt<32>("h02443ffff") @[Mem.scala 58:34]
    _T_283[72] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[73] <= UInt<32>("h0ac430350") @[Mem.scala 58:34]
    _T_283[74] <= UInt<32>("h024040f20") @[Mem.scala 58:34]
    _T_283[75] <= UInt<32>("h0c000076") @[Mem.scala 58:34]
    _T_283[76] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[77] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[78] <= UInt<32>("h08c420350") @[Mem.scala 58:34]
    _T_283[79] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[80] <= UInt<32>("h02443ffff") @[Mem.scala 58:34]
    _T_283[81] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[82] <= UInt<32>("h0ac430350") @[Mem.scala 58:34]
    _T_283[83] <= UInt<32>("h01000ffbb") @[Mem.scala 58:34]
    _T_283[84] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[85] <= UInt<32>("h08fc3001c") @[Mem.scala 58:34]
    _T_283[86] <= UInt<32>("h02402001b") @[Mem.scala 58:34]
    _T_283[87] <= UInt<32>("h014620016") @[Mem.scala 58:34]
    _T_283[88] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[89] <= UInt<32>("h0afc00018") @[Mem.scala 58:34]
    _T_283[90] <= UInt<32>("h010000008") @[Mem.scala 58:34]
    _T_283[91] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[92] <= UInt<32>("h024040f20") @[Mem.scala 58:34]
    _T_283[93] <= UInt<32>("h0c000076") @[Mem.scala 58:34]
    _T_283[94] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[95] <= UInt<32>("h08fc20018") @[Mem.scala 58:34]
    _T_283[96] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[97] <= UInt<32>("h024420001") @[Mem.scala 58:34]
    _T_283[98] <= UInt<32>("h0afc20018") @[Mem.scala 58:34]
    _T_283[99] <= UInt<32>("h08fc20018") @[Mem.scala 58:34]
    _T_283[100] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[101] <= UInt<32>("h028420fa0") @[Mem.scala 58:34]
    _T_283[102] <= UInt<32>("h01440fff5") @[Mem.scala 58:34]
    _T_283[103] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[104] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[105] <= UInt<32>("h0ac400350") @[Mem.scala 58:34]
    _T_283[106] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[107] <= UInt<32>("h0ac400354") @[Mem.scala 58:34]
    _T_283[108] <= UInt<32>("h01000ffa2") @[Mem.scala 58:34]
    _T_283[109] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[110] <= UInt<32>("h08fc2001c") @[Mem.scala 58:34]
    _T_283[111] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[112] <= UInt<32>("h034420f00") @[Mem.scala 58:34]
    _T_283[113] <= UInt<32>("h0402025") @[Mem.scala 58:34]
    _T_283[114] <= UInt<32>("h0c000076") @[Mem.scala 58:34]
    _T_283[115] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[116] <= UInt<32>("h01000ff9a") @[Mem.scala 58:34]
    _T_283[117] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[118] <= UInt<32>("h027bdffe8") @[Mem.scala 58:34]
    _T_283[119] <= UInt<32>("h0afbe0014") @[Mem.scala 58:34]
    _T_283[120] <= UInt<32>("h03a0f025") @[Mem.scala 58:34]
    _T_283[121] <= UInt<32>("h0afc40018") @[Mem.scala 58:34]
    _T_283[122] <= UInt<32>("h024023000") @[Mem.scala 58:34]
    _T_283[123] <= UInt<32>("h0afc20008") @[Mem.scala 58:34]
    _T_283[124] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[125] <= UInt<32>("h08c430354") @[Mem.scala 58:34]
    _T_283[126] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[127] <= UInt<32>("h0601025") @[Mem.scala 58:34]
    _T_283[128] <= UInt<32>("h021080") @[Mem.scala 58:34]
    _T_283[129] <= UInt<32>("h0431021") @[Mem.scala 58:34]
    _T_283[130] <= UInt<32>("h021100") @[Mem.scala 58:34]
    _T_283[131] <= UInt<32>("h0401825") @[Mem.scala 58:34]
    _T_283[132] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[133] <= UInt<32>("h08c420350") @[Mem.scala 58:34]
    _T_283[134] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[135] <= UInt<32>("h0621021") @[Mem.scala 58:34]
    _T_283[136] <= UInt<32>("h021080") @[Mem.scala 58:34]
    _T_283[137] <= UInt<32>("h08fc30008") @[Mem.scala 58:34]
    _T_283[138] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[139] <= UInt<32>("h0621021") @[Mem.scala 58:34]
    _T_283[140] <= UInt<32>("h08fc30018") @[Mem.scala 58:34]
    _T_283[141] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[142] <= UInt<32>("h0ac430000") @[Mem.scala 58:34]
    _T_283[143] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[144] <= UInt<32>("h08c420350") @[Mem.scala 58:34]
    _T_283[145] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[146] <= UInt<32>("h024430001") @[Mem.scala 58:34]
    _T_283[147] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[148] <= UInt<32>("h0ac430350") @[Mem.scala 58:34]
    _T_283[149] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[150] <= UInt<32>("h08c430350") @[Mem.scala 58:34]
    _T_283[151] <= UInt<32>("h024020050") @[Mem.scala 58:34]
    _T_283[152] <= UInt<32>("h014620010") @[Mem.scala 58:34]
    _T_283[153] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[154] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[155] <= UInt<32>("h0ac400350") @[Mem.scala 58:34]
    _T_283[156] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[157] <= UInt<32>("h08c420354") @[Mem.scala 58:34]
    _T_283[158] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[159] <= UInt<32>("h024430001") @[Mem.scala 58:34]
    _T_283[160] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[161] <= UInt<32>("h0ac430354") @[Mem.scala 58:34]
    _T_283[162] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[163] <= UInt<32>("h08c430354") @[Mem.scala 58:34]
    _T_283[164] <= UInt<32>("h024020019") @[Mem.scala 58:34]
    _T_283[165] <= UInt<32>("h014620003") @[Mem.scala 58:34]
    _T_283[166] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[167] <= UInt<32>("h03c020000") @[Mem.scala 58:34]
    _T_283[168] <= UInt<32>("h0ac400354") @[Mem.scala 58:34]
    _T_283[169] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[170] <= UInt<32>("h03c0e825") @[Mem.scala 58:34]
    _T_283[171] <= UInt<32>("h08fbe0014") @[Mem.scala 58:34]
    _T_283[172] <= UInt<32>("h027bd0018") @[Mem.scala 58:34]
    _T_283[173] <= UInt<32>("h03e00008") @[Mem.scala 58:34]
    _T_283[174] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[175] <= UInt<32>("h027bdffe0") @[Mem.scala 58:34]
    _T_283[176] <= UInt<32>("h0afbe001c") @[Mem.scala 58:34]
    _T_283[177] <= UInt<32>("h03a0f025") @[Mem.scala 58:34]
    _T_283[178] <= UInt<32>("h03402ff00") @[Mem.scala 58:34]
    _T_283[179] <= UInt<32>("h0afc20008") @[Mem.scala 58:34]
    _T_283[180] <= UInt<32>("h03c024000") @[Mem.scala 58:34]
    _T_283[181] <= UInt<32>("h0afc2000c") @[Mem.scala 58:34]
    _T_283[182] <= UInt<32>("h0240200ff") @[Mem.scala 58:34]
    _T_283[183] <= UInt<32>("h0afc20010") @[Mem.scala 58:34]
    _T_283[184] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[185] <= UInt<32>("h08fc20008") @[Mem.scala 58:34]
    _T_283[186] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[187] <= UInt<32>("h08c430000") @[Mem.scala 58:34]
    _T_283[188] <= UInt<32>("h08fc2000c") @[Mem.scala 58:34]
    _T_283[189] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[190] <= UInt<32>("h0621024") @[Mem.scala 58:34]
    _T_283[191] <= UInt<32>("h01040fff9") @[Mem.scala 58:34]
    _T_283[192] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[193] <= UInt<32>("h08fc20008") @[Mem.scala 58:34]
    _T_283[194] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[195] <= UInt<32>("h08c420000") @[Mem.scala 58:34]
    _T_283[196] <= UInt<32>("h08fc30010") @[Mem.scala 58:34]
    _T_283[197] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[198] <= UInt<32>("h0621024") @[Mem.scala 58:34]
    _T_283[199] <= UInt<32>("h0afc20014") @[Mem.scala 58:34]
    _T_283[200] <= UInt<32>("h08fc20008") @[Mem.scala 58:34]
    _T_283[201] <= UInt<32>("h03c038000") @[Mem.scala 58:34]
    _T_283[202] <= UInt<32>("h0ac430000") @[Mem.scala 58:34]
    _T_283[203] <= UInt<32>("h08fc20014") @[Mem.scala 58:34]
    _T_283[204] <= UInt<32>("h03c0e825") @[Mem.scala 58:34]
    _T_283[205] <= UInt<32>("h08fbe001c") @[Mem.scala 58:34]
    _T_283[206] <= UInt<32>("h027bd0020") @[Mem.scala 58:34]
    _T_283[207] <= UInt<32>("h03e00008") @[Mem.scala 58:34]
    _T_283[208] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[209] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[210] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[211] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[212] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[213] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[214] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[215] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[216] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[217] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[218] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[219] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[220] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[221] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[222] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[223] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[224] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[225] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[226] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[227] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[228] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[229] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[230] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[231] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[232] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[233] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[234] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[235] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[236] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[237] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[238] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[239] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[240] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[241] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[242] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[243] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[244] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[245] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[246] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[247] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[248] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[249] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[250] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[251] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[252] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[253] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[254] <= UInt<32>("h00") @[Mem.scala 58:34]
    _T_283[255] <= UInt<32>("h00") @[Mem.scala 58:34]
    reg memory : UInt<32>[256], clock with : (reset => (reset, _T_283)) @[Mem.scala 58:25]
    when io.mem_wen : @[Mem.scala 64:23]
      node _T_1830 = shr(io.mem_addr, 2) @[Mem.scala 65:28]
      node _T_1834 = bits(_T_1830, 7, 0)
      memory[_T_1834] <= io.mem_wdata @[Mem.scala 65:34]
      skip @[Mem.scala 64:23]
    node _T_1835 = shr(io.mem_addr, 2) @[Mem.scala 69:40]
    node _T_1839 = bits(_T_1835, 7, 0)
    io.mem_rdata <= memory[_T_1839] @[Mem.scala 69:18]
    node _T_1840 = shr(io.mem_addr2, 2) @[Mem.scala 73:42]
    node _T_1844 = bits(_T_1840, 7, 0)
    io.mem_rdata2 <= memory[_T_1844] @[Mem.scala 73:19]
    
  module VGACore : 
    input clock : Clock
    input reset : UInt<1>
    output io : {row : UInt<32>, col : UInt<32>, ready : UInt<1>, pre_ready : UInt<1>, flip color : UInt<12>, sig : {r : UInt<4>, g : UInt<4>, b : UInt<4>, hsync : UInt<1>, vsync : UInt<1>}}
    
    reg h_tick : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[VGACore.scala 136:23]
    reg v_tick : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[VGACore.scala 137:23]
    node _T_29 = add(UInt<32>("h06c"), UInt<32>("h033")) @[VGACore.scala 139:18]
    node _T_30 = tail(_T_29, 1) @[VGACore.scala 139:18]
    node _T_31 = add(_T_30, UInt<32>("h02d0")) @[VGACore.scala 139:23]
    node _T_32 = tail(_T_31, 1) @[VGACore.scala 139:23]
    node _T_33 = add(_T_32, UInt<32>("h0f")) @[VGACore.scala 139:28]
    node h_max = tail(_T_33, 1) @[VGACore.scala 139:28]
    node _T_34 = add(UInt<32>("h02"), UInt<32>("h020")) @[VGACore.scala 140:18]
    node _T_35 = tail(_T_34, 1) @[VGACore.scala 140:18]
    node _T_36 = add(_T_35, UInt<32>("h0190")) @[VGACore.scala 140:23]
    node _T_37 = tail(_T_36, 1) @[VGACore.scala 140:23]
    node _T_38 = add(_T_37, UInt<32>("h0b")) @[VGACore.scala 140:28]
    node v_max = tail(_T_38, 1) @[VGACore.scala 140:28]
    node _T_40 = sub(h_max, UInt<1>("h01")) @[VGACore.scala 143:25]
    node _T_41 = asUInt(_T_40) @[VGACore.scala 143:25]
    node _T_42 = tail(_T_41, 1) @[VGACore.scala 143:25]
    node _T_43 = geq(h_tick, _T_42) @[VGACore.scala 143:16]
    when _T_43 : @[VGACore.scala 143:32]
      h_tick <= UInt<1>("h00") @[VGACore.scala 144:12]
      node _T_46 = sub(v_max, UInt<1>("h01")) @[VGACore.scala 145:27]
      node _T_47 = asUInt(_T_46) @[VGACore.scala 145:27]
      node _T_48 = tail(_T_47, 1) @[VGACore.scala 145:27]
      node _T_49 = geq(v_tick, _T_48) @[VGACore.scala 145:18]
      when _T_49 : @[VGACore.scala 145:34]
        v_tick <= UInt<1>("h00") @[VGACore.scala 146:14]
        skip @[VGACore.scala 145:34]
      else : @[VGACore.scala 147:18]
        node _T_52 = add(v_tick, UInt<1>("h01")) @[VGACore.scala 148:24]
        node _T_53 = tail(_T_52, 1) @[VGACore.scala 148:24]
        v_tick <= _T_53 @[VGACore.scala 148:14]
        skip @[VGACore.scala 147:18]
      skip @[VGACore.scala 143:32]
    else : @[VGACore.scala 150:16]
      node _T_55 = add(h_tick, UInt<1>("h01")) @[VGACore.scala 151:22]
      node _T_56 = tail(_T_55, 1) @[VGACore.scala 151:22]
      h_tick <= _T_56 @[VGACore.scala 151:12]
      skip @[VGACore.scala 150:16]
    node _T_57 = add(UInt<32>("h06c"), UInt<32>("h033")) @[VGACore.scala 154:29]
    node _T_58 = tail(_T_57, 1) @[VGACore.scala 154:29]
    node _T_59 = geq(h_tick, _T_58) @[VGACore.scala 154:23]
    node _T_60 = add(UInt<32>("h06c"), UInt<32>("h033")) @[VGACore.scala 154:51]
    node _T_61 = tail(_T_60, 1) @[VGACore.scala 154:51]
    node _T_62 = add(_T_61, UInt<32>("h02d0")) @[VGACore.scala 154:56]
    node _T_63 = tail(_T_62, 1) @[VGACore.scala 154:56]
    node _T_64 = lt(h_tick, _T_63) @[VGACore.scala 154:46]
    node _T_65 = and(_T_59, _T_64) @[VGACore.scala 154:35]
    node _T_66 = add(UInt<32>("h02"), UInt<32>("h020")) @[VGACore.scala 154:79]
    node _T_67 = tail(_T_66, 1) @[VGACore.scala 154:79]
    node _T_68 = geq(v_tick, _T_67) @[VGACore.scala 154:73]
    node _T_69 = and(_T_65, _T_68) @[VGACore.scala 154:62]
    node _T_70 = add(UInt<32>("h02"), UInt<32>("h020")) @[VGACore.scala 154:101]
    node _T_71 = tail(_T_70, 1) @[VGACore.scala 154:101]
    node _T_72 = add(_T_71, UInt<32>("h0190")) @[VGACore.scala 154:106]
    node _T_73 = tail(_T_72, 1) @[VGACore.scala 154:106]
    node _T_74 = lt(v_tick, _T_73) @[VGACore.scala 154:96]
    node _T_75 = and(_T_69, _T_74) @[VGACore.scala 154:85]
    io.ready <= _T_75 @[VGACore.scala 154:12]
    node _T_76 = add(UInt<32>("h06c"), UInt<32>("h033")) @[VGACore.scala 155:33]
    node _T_77 = tail(_T_76, 1) @[VGACore.scala 155:33]
    node _T_79 = sub(_T_77, UInt<1>("h01")) @[VGACore.scala 155:38]
    node _T_80 = asUInt(_T_79) @[VGACore.scala 155:38]
    node _T_81 = tail(_T_80, 1) @[VGACore.scala 155:38]
    node _T_82 = geq(h_tick, _T_81) @[VGACore.scala 155:27]
    node _T_83 = add(UInt<32>("h06c"), UInt<32>("h033")) @[VGACore.scala 155:61]
    node _T_84 = tail(_T_83, 1) @[VGACore.scala 155:61]
    node _T_85 = add(_T_84, UInt<32>("h02d0")) @[VGACore.scala 155:66]
    node _T_86 = tail(_T_85, 1) @[VGACore.scala 155:66]
    node _T_88 = sub(_T_86, UInt<1>("h01")) @[VGACore.scala 155:71]
    node _T_89 = asUInt(_T_88) @[VGACore.scala 155:71]
    node _T_90 = tail(_T_89, 1) @[VGACore.scala 155:71]
    node _T_91 = lt(h_tick, _T_90) @[VGACore.scala 155:56]
    node _T_92 = and(_T_82, _T_91) @[VGACore.scala 155:45]
    node _T_93 = add(UInt<32>("h02"), UInt<32>("h020")) @[VGACore.scala 155:95]
    node _T_94 = tail(_T_93, 1) @[VGACore.scala 155:95]
    node _T_96 = sub(_T_94, UInt<1>("h01")) @[VGACore.scala 155:100]
    node _T_97 = asUInt(_T_96) @[VGACore.scala 155:100]
    node _T_98 = tail(_T_97, 1) @[VGACore.scala 155:100]
    node _T_99 = geq(v_tick, _T_98) @[VGACore.scala 155:89]
    node _T_100 = and(_T_92, _T_99) @[VGACore.scala 155:78]
    node _T_101 = add(UInt<32>("h02"), UInt<32>("h020")) @[VGACore.scala 155:123]
    node _T_102 = tail(_T_101, 1) @[VGACore.scala 155:123]
    node _T_103 = add(_T_102, UInt<32>("h0190")) @[VGACore.scala 155:128]
    node _T_104 = tail(_T_103, 1) @[VGACore.scala 155:128]
    node _T_106 = sub(_T_104, UInt<1>("h01")) @[VGACore.scala 155:133]
    node _T_107 = asUInt(_T_106) @[VGACore.scala 155:133]
    node _T_108 = tail(_T_107, 1) @[VGACore.scala 155:133]
    node _T_109 = lt(v_tick, _T_108) @[VGACore.scala 155:118]
    node _T_110 = and(_T_100, _T_109) @[VGACore.scala 155:107]
    io.pre_ready <= _T_110 @[VGACore.scala 155:16]
    node _T_111 = bits(io.color, 3, 0) @[VGACore.scala 156:37]
    node _T_113 = mux(io.ready, _T_111, UInt<1>("h00")) @[VGACore.scala 156:18]
    io.sig.r <= _T_113 @[VGACore.scala 156:12]
    node _T_114 = bits(io.color, 7, 4) @[VGACore.scala 157:37]
    node _T_116 = mux(io.ready, _T_114, UInt<1>("h00")) @[VGACore.scala 157:18]
    io.sig.g <= _T_116 @[VGACore.scala 157:12]
    node _T_117 = bits(io.color, 11, 8) @[VGACore.scala 158:37]
    node _T_119 = mux(io.ready, _T_117, UInt<1>("h00")) @[VGACore.scala 158:18]
    io.sig.b <= _T_119 @[VGACore.scala 158:12]
    node _T_120 = sub(h_tick, UInt<32>("h06c")) @[VGACore.scala 160:20]
    node _T_121 = asUInt(_T_120) @[VGACore.scala 160:20]
    node _T_122 = tail(_T_121, 1) @[VGACore.scala 160:20]
    node _T_123 = sub(_T_122, UInt<32>("h033")) @[VGACore.scala 160:25]
    node _T_124 = asUInt(_T_123) @[VGACore.scala 160:25]
    node _T_125 = tail(_T_124, 1) @[VGACore.scala 160:25]
    io.col <= _T_125 @[VGACore.scala 160:10]
    node _T_126 = sub(v_tick, UInt<32>("h02")) @[VGACore.scala 161:20]
    node _T_127 = asUInt(_T_126) @[VGACore.scala 161:20]
    node _T_128 = tail(_T_127, 1) @[VGACore.scala 161:20]
    node _T_129 = sub(_T_128, UInt<32>("h020")) @[VGACore.scala 161:25]
    node _T_130 = asUInt(_T_129) @[VGACore.scala 161:25]
    node _T_131 = tail(_T_130, 1) @[VGACore.scala 161:25]
    io.row <= _T_131 @[VGACore.scala 161:10]
    node _T_132 = geq(h_tick, UInt<32>("h06c")) @[VGACore.scala 163:26]
    io.sig.hsync <= _T_132 @[VGACore.scala 163:16]
    node _T_133 = geq(v_tick, UInt<32>("h02")) @[VGACore.scala 164:26]
    io.sig.vsync <= _T_133 @[VGACore.scala 164:16]
    
  extmodule CGROMBlackbox : 
    output data : UInt<8>
    input row : UInt<4>
    input addr : UInt<8>
    input clock : Clock
    
    defname = CGROMBlackbox
    
    
  module CGROM : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip addr : UInt<8>, flip row : UInt<4>, data : UInt<8>}
    
    inst impl of CGROMBlackbox @[VGA.scala 293:20]
    impl.data is invalid
    impl.row is invalid
    impl.addr is invalid
    impl.clock is invalid
    impl.clock <= clock @[VGA.scala 294:17]
    impl.addr <= io.addr @[VGA.scala 295:16]
    impl.row <= io.row @[VGA.scala 296:15]
    io.data <= impl.data @[VGA.scala 297:11]
    
  module VGA : 
    input clock : Clock
    input reset : UInt<1>
    output io : {sig : {r : UInt<4>, g : UInt<4>, b : UInt<4>, hsync : UInt<1>, vsync : UInt<1>}, vram_raddr : UInt<32>, flip vram_rdata : UInt<16>}
    
    inst core of VGACore @[VGA.scala 156:20]
    core.clock <= clock
    core.reset <= reset
    inst cgrom of CGROM @[VGA.scala 157:21]
    cgrom.clock <= clock
    cgrom.reset <= reset
    io.sig.vsync <= core.io.sig.vsync @[VGA.scala 159:15]
    io.sig.hsync <= core.io.sig.hsync @[VGA.scala 159:15]
    io.sig.b <= core.io.sig.b @[VGA.scala 159:15]
    io.sig.g <= core.io.sig.g @[VGA.scala 159:15]
    io.sig.r <= core.io.sig.r @[VGA.scala 159:15]
    node _T_20 = eq(core.io.row, UInt<1>("h00")) @[VGA.scala 163:28]
    node _T_22 = eq(core.io.col, UInt<1>("h00")) @[VGA.scala 163:53]
    node start = and(_T_20, _T_22) @[VGA.scala 163:37]
    reg col_ctick : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Counter.scala 9:33]
    when start : @[Counter.scala 48:18]
      node _T_26 = eq(col_ctick, UInt<4>("h08")) @[Counter.scala 30:24]
      col_ctick <= UInt<1>("h01") @[Counter.scala 31:13]
      skip @[Counter.scala 48:18]
    else : @[Counter.scala 49:22]
      when core.io.ready : @[Counter.scala 49:22]
        node _T_29 = eq(col_ctick, UInt<4>("h08")) @[Counter.scala 17:24]
        node _T_31 = add(col_ctick, UInt<1>("h01")) @[Counter.scala 18:22]
        node _T_32 = tail(_T_31, 1) @[Counter.scala 18:22]
        col_ctick <= _T_32 @[Counter.scala 18:13]
        when _T_29 : @[Counter.scala 20:21]
          col_ctick <= UInt<1>("h00") @[Counter.scala 20:29]
          skip @[Counter.scala 20:21]
        skip @[Counter.scala 49:22]
    node col_ctick_carry = and(core.io.ready, _T_29) @[Counter.scala 50:20]
    reg col_tick : UInt<7>, clock with : (reset => (reset, UInt<7>("h00"))) @[Counter.scala 9:33]
    when start : @[Counter.scala 48:18]
      node _T_37 = eq(col_tick, UInt<7>("h04f")) @[Counter.scala 30:24]
      col_tick <= UInt<1>("h00") @[Counter.scala 31:13]
      skip @[Counter.scala 48:18]
    else : @[Counter.scala 49:22]
      when col_ctick_carry : @[Counter.scala 49:22]
        node _T_40 = eq(col_tick, UInt<7>("h04f")) @[Counter.scala 17:24]
        node _T_42 = add(col_tick, UInt<1>("h01")) @[Counter.scala 18:22]
        node _T_43 = tail(_T_42, 1) @[Counter.scala 18:22]
        col_tick <= _T_43 @[Counter.scala 18:13]
        when _T_40 : @[Counter.scala 20:21]
          col_tick <= UInt<1>("h00") @[Counter.scala 20:29]
          skip @[Counter.scala 20:21]
        skip @[Counter.scala 49:22]
    node col_tick_carry = and(col_ctick_carry, _T_40) @[Counter.scala 50:20]
    reg row_ctick : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Counter.scala 9:33]
    when start : @[Counter.scala 48:18]
      node _T_48 = eq(row_ctick, UInt<4>("h0f")) @[Counter.scala 30:24]
      row_ctick <= UInt<1>("h00") @[Counter.scala 31:13]
      skip @[Counter.scala 48:18]
    else : @[Counter.scala 49:22]
      when col_tick_carry : @[Counter.scala 49:22]
        node _T_51 = eq(row_ctick, UInt<4>("h0f")) @[Counter.scala 17:24]
        node _T_53 = add(row_ctick, UInt<1>("h01")) @[Counter.scala 18:22]
        node _T_54 = tail(_T_53, 1) @[Counter.scala 18:22]
        row_ctick <= _T_54 @[Counter.scala 18:13]
        skip @[Counter.scala 49:22]
    node row_ctick_carry = and(col_tick_carry, _T_51) @[Counter.scala 50:20]
    reg row_tick : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[Counter.scala 9:33]
    when start : @[Counter.scala 48:18]
      node _T_58 = eq(row_tick, UInt<5>("h018")) @[Counter.scala 30:24]
      row_tick <= UInt<1>("h00") @[Counter.scala 31:13]
      skip @[Counter.scala 48:18]
    else : @[Counter.scala 49:22]
      when row_ctick_carry : @[Counter.scala 49:22]
        node _T_61 = eq(row_tick, UInt<5>("h018")) @[Counter.scala 17:24]
        node _T_63 = add(row_tick, UInt<1>("h01")) @[Counter.scala 18:22]
        node _T_64 = tail(_T_63, 1) @[Counter.scala 18:22]
        row_tick <= _T_64 @[Counter.scala 18:13]
        when _T_61 : @[Counter.scala 20:21]
          row_tick <= UInt<1>("h00") @[Counter.scala 20:29]
          skip @[Counter.scala 20:21]
        skip @[Counter.scala 49:22]
    node row_tick_carry = and(row_ctick_carry, _T_61) @[Counter.scala 50:20]
    node _T_66 = bits(io.vram_rdata, 14, 12) @[VGA.scala 175:41]
    node _T_72 = cat(UInt<4>("h00"), UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_73 = cat(_T_72, UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_78 = cat(UInt<4>("h00"), UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_79 = cat(_T_78, UInt<4>("h0c")) @[Cat.scala 30:58]
    node _T_84 = cat(UInt<4>("h00"), UInt<4>("h0c")) @[Cat.scala 30:58]
    node _T_85 = cat(_T_84, UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_90 = cat(UInt<4>("h00"), UInt<4>("h0c")) @[Cat.scala 30:58]
    node _T_91 = cat(_T_90, UInt<4>("h0c")) @[Cat.scala 30:58]
    node _T_96 = cat(UInt<4>("h0c"), UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_97 = cat(_T_96, UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_102 = cat(UInt<4>("h0c"), UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_103 = cat(_T_102, UInt<4>("h0c")) @[Cat.scala 30:58]
    node _T_108 = cat(UInt<4>("h0c"), UInt<4>("h06")) @[Cat.scala 30:58]
    node _T_109 = cat(_T_108, UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_114 = cat(UInt<4>("h0c"), UInt<4>("h0c")) @[Cat.scala 30:58]
    node _T_115 = cat(_T_114, UInt<4>("h0c")) @[Cat.scala 30:58]
    node _T_120 = cat(UInt<4>("h0f"), UInt<4>("h0f")) @[Cat.scala 30:58]
    node _T_121 = cat(_T_120, UInt<4>("h0f")) @[Cat.scala 30:58]
    node _T_122 = eq(UInt<4>("h0f"), _T_66) @[Mux.scala 46:19]
    node _T_123 = mux(_T_122, _T_121, UInt<12>("h00")) @[Mux.scala 46:16]
    node _T_124 = eq(UInt<3>("h07"), _T_66) @[Mux.scala 46:19]
    node _T_125 = mux(_T_124, _T_115, _T_123) @[Mux.scala 46:16]
    node _T_126 = eq(UInt<3>("h06"), _T_66) @[Mux.scala 46:19]
    node _T_127 = mux(_T_126, _T_109, _T_125) @[Mux.scala 46:16]
    node _T_128 = eq(UInt<3>("h05"), _T_66) @[Mux.scala 46:19]
    node _T_129 = mux(_T_128, _T_103, _T_127) @[Mux.scala 46:16]
    node _T_130 = eq(UInt<3>("h04"), _T_66) @[Mux.scala 46:19]
    node _T_131 = mux(_T_130, _T_97, _T_129) @[Mux.scala 46:16]
    node _T_132 = eq(UInt<2>("h03"), _T_66) @[Mux.scala 46:19]
    node _T_133 = mux(_T_132, _T_91, _T_131) @[Mux.scala 46:16]
    node _T_134 = eq(UInt<2>("h02"), _T_66) @[Mux.scala 46:19]
    node _T_135 = mux(_T_134, _T_85, _T_133) @[Mux.scala 46:16]
    node _T_136 = eq(UInt<1>("h01"), _T_66) @[Mux.scala 46:19]
    node _T_137 = mux(_T_136, _T_79, _T_135) @[Mux.scala 46:16]
    node _T_138 = eq(UInt<1>("h00"), _T_66) @[Mux.scala 46:19]
    node bg_color = mux(_T_138, _T_73, _T_137) @[Mux.scala 46:16]
    node _T_139 = bits(io.vram_rdata, 11, 8) @[VGA.scala 187:41]
    node _T_145 = cat(UInt<4>("h00"), UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_146 = cat(_T_145, UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_151 = cat(UInt<4>("h00"), UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_152 = cat(_T_151, UInt<4>("h0c")) @[Cat.scala 30:58]
    node _T_157 = cat(UInt<4>("h00"), UInt<4>("h0c")) @[Cat.scala 30:58]
    node _T_158 = cat(_T_157, UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_163 = cat(UInt<4>("h00"), UInt<4>("h0c")) @[Cat.scala 30:58]
    node _T_164 = cat(_T_163, UInt<4>("h0c")) @[Cat.scala 30:58]
    node _T_169 = cat(UInt<4>("h0c"), UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_170 = cat(_T_169, UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_175 = cat(UInt<4>("h0c"), UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_176 = cat(_T_175, UInt<4>("h0c")) @[Cat.scala 30:58]
    node _T_181 = cat(UInt<4>("h0c"), UInt<4>("h06")) @[Cat.scala 30:58]
    node _T_182 = cat(_T_181, UInt<4>("h00")) @[Cat.scala 30:58]
    node _T_187 = cat(UInt<4>("h0c"), UInt<4>("h0c")) @[Cat.scala 30:58]
    node _T_188 = cat(_T_187, UInt<4>("h0c")) @[Cat.scala 30:58]
    node _T_193 = cat(UInt<4>("h0f"), UInt<4>("h0f")) @[Cat.scala 30:58]
    node _T_194 = cat(_T_193, UInt<4>("h0f")) @[Cat.scala 30:58]
    node _T_195 = eq(UInt<4>("h0f"), _T_139) @[Mux.scala 46:19]
    node _T_196 = mux(_T_195, _T_194, UInt<12>("h00")) @[Mux.scala 46:16]
    node _T_197 = eq(UInt<3>("h07"), _T_139) @[Mux.scala 46:19]
    node _T_198 = mux(_T_197, _T_188, _T_196) @[Mux.scala 46:16]
    node _T_199 = eq(UInt<3>("h06"), _T_139) @[Mux.scala 46:19]
    node _T_200 = mux(_T_199, _T_182, _T_198) @[Mux.scala 46:16]
    node _T_201 = eq(UInt<3>("h05"), _T_139) @[Mux.scala 46:19]
    node _T_202 = mux(_T_201, _T_176, _T_200) @[Mux.scala 46:16]
    node _T_203 = eq(UInt<3>("h04"), _T_139) @[Mux.scala 46:19]
    node _T_204 = mux(_T_203, _T_170, _T_202) @[Mux.scala 46:16]
    node _T_205 = eq(UInt<2>("h03"), _T_139) @[Mux.scala 46:19]
    node _T_206 = mux(_T_205, _T_164, _T_204) @[Mux.scala 46:16]
    node _T_207 = eq(UInt<2>("h02"), _T_139) @[Mux.scala 46:19]
    node _T_208 = mux(_T_207, _T_158, _T_206) @[Mux.scala 46:16]
    node _T_209 = eq(UInt<1>("h01"), _T_139) @[Mux.scala 46:19]
    node _T_210 = mux(_T_209, _T_152, _T_208) @[Mux.scala 46:16]
    node _T_211 = eq(UInt<1>("h00"), _T_139) @[Mux.scala 46:19]
    node fg_color = mux(_T_211, _T_146, _T_210) @[Mux.scala 46:16]
    node _T_213 = eq(core.io.row, UInt<1>("h00")) @[VGA.scala 211:31]
    node _T_214 = asSInt(core.io.col) @[VGA.scala 211:56]
    node _T_216 = lt(_T_214, asSInt(UInt<1>("h00"))) @[VGA.scala 211:63]
    node frame_bp = and(_T_213, _T_216) @[VGA.scala 211:40]
    node _T_218 = mul(row_tick, UInt<7>("h050")) @[VGA.scala 212:33]
    node _T_219 = add(_T_218, col_tick) @[VGA.scala 212:40]
    node _T_220 = tail(_T_219, 1) @[VGA.scala 212:40]
    node _T_222 = add(_T_220, UInt<1>("h01")) @[VGA.scala 212:51]
    node _T_223 = tail(_T_222, 1) @[VGA.scala 212:51]
    node reach_the_end = eq(_T_223, UInt<11>("h07d0")) @[VGA.scala 212:57]
    node _T_226 = mul(row_tick, UInt<7>("h050")) @[VGA.scala 214:34]
    node _T_227 = add(_T_226, col_tick) @[VGA.scala 214:41]
    node this_char_addr = tail(_T_227, 1) @[VGA.scala 214:41]
    wire next_char_addr : UInt<32> @[VGA.scala 215:28]
    node _T_230 = eq(col_tick, UInt<7>("h04f")) @[VGA.scala 216:18]
    when _T_230 : @[VGA.scala 216:28]
      node _T_232 = eq(row_ctick, UInt<4>("h0f")) @[VGA.scala 217:21]
      when _T_232 : @[VGA.scala 217:31]
        node _T_234 = add(row_tick, UInt<1>("h01")) @[VGA.scala 218:39]
        node _T_235 = tail(_T_234, 1) @[VGA.scala 218:39]
        node _T_237 = mul(_T_235, UInt<7>("h050")) @[VGA.scala 218:46]
        node _T_239 = eq(_T_237, UInt<11>("h07d0")) @[VGA.scala 218:53]
        node _T_242 = add(row_tick, UInt<1>("h01")) @[VGA.scala 218:80]
        node _T_243 = tail(_T_242, 1) @[VGA.scala 218:80]
        node _T_245 = mul(_T_243, UInt<7>("h050")) @[VGA.scala 218:87]
        node _T_246 = mux(_T_239, UInt<1>("h00"), _T_245) @[VGA.scala 218:28]
        next_char_addr <= _T_246 @[VGA.scala 218:22]
        skip @[VGA.scala 217:31]
      else : @[VGA.scala 219:18]
        node _T_248 = mul(row_tick, UInt<7>("h050")) @[VGA.scala 220:34]
        next_char_addr <= _T_248 @[VGA.scala 220:22]
        skip @[VGA.scala 219:18]
      skip @[VGA.scala 216:28]
    else : @[VGA.scala 222:16]
      node _T_251 = mul(row_tick, UInt<7>("h050")) @[VGA.scala 223:56]
      node _T_252 = add(_T_251, col_tick) @[VGA.scala 223:63]
      node _T_253 = tail(_T_252, 1) @[VGA.scala 223:63]
      node _T_255 = add(_T_253, UInt<1>("h01")) @[VGA.scala 223:74]
      node _T_256 = tail(_T_255, 1) @[VGA.scala 223:74]
      node _T_257 = mux(reach_the_end, UInt<1>("h00"), _T_256) @[VGA.scala 223:26]
      next_char_addr <= _T_257 @[VGA.scala 223:20]
      skip @[VGA.scala 222:16]
    node _T_259 = neq(col_ctick, UInt<4>("h08")) @[VGA.scala 226:35]
    node _T_261 = eq(frame_bp, UInt<1>("h00")) @[VGA.scala 226:46]
    node _T_262 = and(_T_259, _T_261) @[VGA.scala 226:43]
    node _T_264 = or(frame_bp, reach_the_end) @[VGA.scala 228:17]
    node _T_267 = eq(reach_the_end, UInt<1>("h00")) @[VGA.scala 229:6]
    node _T_268 = mux(_T_267, next_char_addr, UInt<1>("h00")) @[Mux.scala 61:16]
    node _T_269 = mux(_T_264, UInt<1>("h00"), _T_268) @[Mux.scala 61:16]
    node _T_270 = mux(_T_262, this_char_addr, _T_269) @[VGA.scala 226:23]
    io.vram_raddr <= _T_270 @[VGA.scala 226:17]
    node _T_271 = bits(io.vram_rdata, 7, 0) @[VGA.scala 232:33]
    cgrom.io.addr <= _T_271 @[VGA.scala 232:17]
    cgrom.io.row <= row_ctick @[VGA.scala 233:17]
    node _T_273 = eq(col_ctick, UInt<4>("h08")) @[VGA.scala 235:34]
    node _T_274 = dshr(cgrom.io.data, col_ctick) @[VGA.scala 235:70]
    node _T_275 = bits(_T_274, 0, 0) @[VGA.scala 235:70]
    node _T_276 = mux(_T_275, fg_color, bg_color) @[VGA.scala 235:56]
    node _T_277 = mux(_T_273, bg_color, _T_276) @[VGA.scala 235:23]
    core.io.color <= _T_277 @[VGA.scala 235:17]
    
  module DDU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip cont : UInt<1>, flip step : UInt<1>, flip mem : UInt<1>, flip inc : UInt<1>, flip dec : UInt<1>, disp : {seg : UInt<7>, dp : UInt<1>, an : UInt<8>}, led : UInt<16>, vram_port : {flip rdata : UInt<16>, raddr : UInt<16>, wdata : UInt<16>, waddr : UInt<32>, wen : UInt<1>}, uart_port : {flip mem_rdata : UInt<32>, mem_wdata : UInt<32>, mem_wen : UInt<1>}, vga_sig : {r : UInt<4>, g : UInt<4>, b : UInt<4>, hsync : UInt<1>, vsync : UInt<1>}}
    
    inst cpu of CPU @[DDU.scala 41:21]
    cpu.clock <= clock
    cpu.reset <= reset
    inst mmap of MMap @[DDU.scala 42:22]
    mmap.clock <= clock
    mmap.reset <= reset
    inst main_mem of Mem @[DDU.scala 44:26]
    main_mem.clock <= clock
    main_mem.reset <= reset
    inst vga_inst of VGA @[DDU.scala 46:26]
    vga_inst.clock <= clock
    vga_inst.reset <= reset
    cpu.io.mem_port.mem_rdata2 <= mmap.io.mmap_port.mem_rdata2 @[DDU.scala 48:21]
    mmap.io.mmap_port.mem_addr2 <= cpu.io.mem_port.mem_addr2 @[DDU.scala 48:21]
    mmap.io.mmap_port.mem_wen <= cpu.io.mem_port.mem_wen @[DDU.scala 48:21]
    mmap.io.mmap_port.mem_wdata <= cpu.io.mem_port.mem_wdata @[DDU.scala 48:21]
    mmap.io.mmap_port.mem_addr <= cpu.io.mem_port.mem_addr @[DDU.scala 48:21]
    cpu.io.mem_port.mem_rdata <= mmap.io.mmap_port.mem_rdata @[DDU.scala 48:21]
    mmap.io.mem_port.mem_rdata2 <= main_mem.io.mem_rdata2 @[DDU.scala 49:22]
    main_mem.io.mem_addr2 <= mmap.io.mem_port.mem_addr2 @[DDU.scala 49:22]
    main_mem.io.mem_wen <= mmap.io.mem_port.mem_wen @[DDU.scala 49:22]
    main_mem.io.mem_wdata <= mmap.io.mem_port.mem_wdata @[DDU.scala 49:22]
    main_mem.io.mem_addr <= mmap.io.mem_port.mem_addr @[DDU.scala 49:22]
    mmap.io.mem_port.mem_rdata <= main_mem.io.mem_rdata @[DDU.scala 49:22]
    io.uart_port.mem_wen <= mmap.io.uart_port.mem_wen @[DDU.scala 50:23]
    io.uart_port.mem_wdata <= mmap.io.uart_port.mem_wdata @[DDU.scala 50:23]
    mmap.io.uart_port.mem_rdata <= io.uart_port.mem_rdata @[DDU.scala 50:23]
    io.vga_sig.vsync <= vga_inst.io.sig.vsync @[DDU.scala 52:21]
    io.vga_sig.hsync <= vga_inst.io.sig.hsync @[DDU.scala 52:21]
    io.vga_sig.b <= vga_inst.io.sig.b @[DDU.scala 52:21]
    io.vga_sig.g <= vga_inst.io.sig.g @[DDU.scala 52:21]
    io.vga_sig.r <= vga_inst.io.sig.r @[DDU.scala 52:21]
    vga_inst.io.vram_rdata <= io.vram_port.rdata @[DDU.scala 54:29]
    io.vram_port.raddr <= vga_inst.io.vram_raddr @[DDU.scala 55:24]
    io.vram_port.wdata <= mmap.io.vram_port.mem_wdata @[DDU.scala 57:24]
    io.vram_port.waddr <= mmap.io.vram_port.mem_addr @[DDU.scala 58:24]
    io.vram_port.wen <= mmap.io.vram_port.mem_wen @[DDU.scala 59:24]
    reg _T_53 : UInt<13>, clock with : (reset => (reset, UInt<13>("h00"))) @[DDU.scala 85:24]
    node _T_54 = eq(_T_53, UInt<13>("h01388")) @[DDU.scala 86:20]
    node _T_57 = add(_T_53, UInt<1>("h01")) @[DDU.scala 86:36]
    node _T_58 = tail(_T_57, 1) @[DDU.scala 86:36]
    node _T_59 = mux(_T_54, UInt<1>("h00"), _T_58) @[DDU.scala 86:17]
    _T_53 <= _T_59 @[DDU.scala 86:11]
    node _T_61 = eq(_T_53, UInt<1>("h00")) @[DDU.scala 126:64]
    reg step : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[DDU.scala 91:24]
    node _T_64 = eq(step, UInt<3>("h07")) @[DDU.scala 92:31]
    node _T_67 = add(step, UInt<1>("h01")) @[DDU.scala 92:47]
    node _T_68 = tail(_T_67, 1) @[DDU.scala 92:47]
    node _T_69 = mux(_T_64, UInt<1>("h00"), _T_68) @[DDU.scala 92:28]
    node _T_70 = mux(_T_61, _T_69, step) @[DDU.scala 92:17]
    step <= _T_70 @[DDU.scala 92:11]
    node _T_72 = dshl(UInt<7>("h01"), step) @[DDU.scala 127:30]
    node _T_73 = not(_T_72) @[DDU.scala 127:19]
    io.disp.an <= _T_73 @[DDU.scala 127:16]
    wire disp_data : UInt<32> @[DDU.scala 130:25]
    node _T_77 = bits(disp_data, 3, 0) @[DDU.scala 132:25]
    node _T_79 = bits(disp_data, 7, 4) @[DDU.scala 133:25]
    node _T_81 = bits(disp_data, 11, 8) @[DDU.scala 134:25]
    node _T_83 = bits(disp_data, 15, 12) @[DDU.scala 135:25]
    node _T_85 = bits(disp_data, 19, 16) @[DDU.scala 136:25]
    node _T_87 = bits(disp_data, 23, 20) @[DDU.scala 137:25]
    node _T_89 = bits(disp_data, 27, 24) @[DDU.scala 138:25]
    node _T_91 = bits(disp_data, 31, 28) @[DDU.scala 139:25]
    node _T_92 = eq(UInt<3>("h07"), step) @[Mux.scala 46:19]
    node _T_93 = mux(_T_92, _T_91, UInt<1>("h00")) @[Mux.scala 46:16]
    node _T_94 = eq(UInt<3>("h06"), step) @[Mux.scala 46:19]
    node _T_95 = mux(_T_94, _T_89, _T_93) @[Mux.scala 46:16]
    node _T_96 = eq(UInt<3>("h05"), step) @[Mux.scala 46:19]
    node _T_97 = mux(_T_96, _T_87, _T_95) @[Mux.scala 46:16]
    node _T_98 = eq(UInt<3>("h04"), step) @[Mux.scala 46:19]
    node _T_99 = mux(_T_98, _T_85, _T_97) @[Mux.scala 46:16]
    node _T_100 = eq(UInt<2>("h03"), step) @[Mux.scala 46:19]
    node _T_101 = mux(_T_100, _T_83, _T_99) @[Mux.scala 46:16]
    node _T_102 = eq(UInt<2>("h02"), step) @[Mux.scala 46:19]
    node _T_103 = mux(_T_102, _T_81, _T_101) @[Mux.scala 46:16]
    node _T_104 = eq(UInt<1>("h01"), step) @[Mux.scala 46:19]
    node _T_105 = mux(_T_104, _T_79, _T_103) @[Mux.scala 46:16]
    node _T_106 = eq(UInt<1>("h00"), step) @[Mux.scala 46:19]
    node _T_107 = mux(_T_106, _T_77, _T_105) @[Mux.scala 46:16]
    node _T_141 = eq(UInt<4>("h0f"), _T_107) @[Mux.scala 46:19]
    node _T_142 = mux(_T_141, UInt<7>("h0e"), UInt<7>("h040")) @[Mux.scala 46:16]
    node _T_143 = eq(UInt<4>("h0e"), _T_107) @[Mux.scala 46:19]
    node _T_144 = mux(_T_143, UInt<7>("h06"), _T_142) @[Mux.scala 46:16]
    node _T_145 = eq(UInt<4>("h0d"), _T_107) @[Mux.scala 46:19]
    node _T_146 = mux(_T_145, UInt<7>("h021"), _T_144) @[Mux.scala 46:16]
    node _T_147 = eq(UInt<4>("h0c"), _T_107) @[Mux.scala 46:19]
    node _T_148 = mux(_T_147, UInt<7>("h046"), _T_146) @[Mux.scala 46:16]
    node _T_149 = eq(UInt<4>("h0b"), _T_107) @[Mux.scala 46:19]
    node _T_150 = mux(_T_149, UInt<7>("h03"), _T_148) @[Mux.scala 46:16]
    node _T_151 = eq(UInt<4>("h0a"), _T_107) @[Mux.scala 46:19]
    node _T_152 = mux(_T_151, UInt<7>("h08"), _T_150) @[Mux.scala 46:16]
    node _T_153 = eq(UInt<4>("h09"), _T_107) @[Mux.scala 46:19]
    node _T_154 = mux(_T_153, UInt<7>("h010"), _T_152) @[Mux.scala 46:16]
    node _T_155 = eq(UInt<4>("h08"), _T_107) @[Mux.scala 46:19]
    node _T_156 = mux(_T_155, UInt<7>("h00"), _T_154) @[Mux.scala 46:16]
    node _T_157 = eq(UInt<3>("h07"), _T_107) @[Mux.scala 46:19]
    node _T_158 = mux(_T_157, UInt<7>("h078"), _T_156) @[Mux.scala 46:16]
    node _T_159 = eq(UInt<3>("h06"), _T_107) @[Mux.scala 46:19]
    node _T_160 = mux(_T_159, UInt<7>("h02"), _T_158) @[Mux.scala 46:16]
    node _T_161 = eq(UInt<3>("h05"), _T_107) @[Mux.scala 46:19]
    node _T_162 = mux(_T_161, UInt<7>("h012"), _T_160) @[Mux.scala 46:16]
    node _T_163 = eq(UInt<3>("h04"), _T_107) @[Mux.scala 46:19]
    node _T_164 = mux(_T_163, UInt<7>("h019"), _T_162) @[Mux.scala 46:16]
    node _T_165 = eq(UInt<2>("h03"), _T_107) @[Mux.scala 46:19]
    node _T_166 = mux(_T_165, UInt<7>("h030"), _T_164) @[Mux.scala 46:16]
    node _T_167 = eq(UInt<2>("h02"), _T_107) @[Mux.scala 46:19]
    node _T_168 = mux(_T_167, UInt<7>("h024"), _T_166) @[Mux.scala 46:16]
    node _T_169 = eq(UInt<1>("h01"), _T_107) @[Mux.scala 46:19]
    node _T_170 = mux(_T_169, UInt<7>("h079"), _T_168) @[Mux.scala 46:16]
    node _T_171 = eq(UInt<1>("h00"), _T_107) @[Mux.scala 46:19]
    node _T_172 = mux(_T_171, UInt<7>("h040"), _T_170) @[Mux.scala 46:16]
    io.disp.seg <= _T_172 @[DDU.scala 131:17]
    io.disp.dp <= UInt<1>("h00") @[DDU.scala 142:16]
    node _T_174 = mux(io.mem, cpu.io.debug.mr_d, cpu.io.debug.rd_c) @[DDU.scala 144:21]
    disp_data <= _T_174 @[DDU.scala 144:15]
    reg disp_addr : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[DDU.scala 145:28]
    reg _T_178 : UInt<1>, clock @[DDU.scala 97:24]
    _T_178 <= io.inc @[DDU.scala 97:24]
    node _T_180 = eq(_T_178, UInt<1>("h00")) @[DDU.scala 98:34]
    node _T_181 = and(io.inc, _T_180) @[DDU.scala 98:31]
    reg _T_185 : UInt<22>, clock with : (reset => (reset, UInt<22>("h00"))) @[DDU.scala 99:26]
    reg _T_189 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DDU.scala 102:32]
    reg _T_192 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DDU.scala 103:26]
    node _T_193 = eq(_T_189, UInt<1>("h00")) @[DDU.scala 104:25]
    when _T_193 : @[DDU.scala 104:35]
      when _T_181 : @[DDU.scala 105:34]
        _T_189 <= UInt<1>("h01") @[DDU.scala 106:27]
        _T_185 <= UInt<22>("h02625a0") @[DDU.scala 107:27]
        _T_192 <= UInt<1>("h01") @[DDU.scala 108:27]
        skip @[DDU.scala 105:34]
      skip @[DDU.scala 104:35]
    else : @[DDU.scala 111:41]
      node _T_196 = eq(_T_189, UInt<1>("h01")) @[DDU.scala 111:30]
      when _T_196 : @[DDU.scala 111:41]
        _T_192 <= UInt<1>("h00") @[DDU.scala 112:17]
        node _T_199 = eq(_T_185, UInt<1>("h00")) @[DDU.scala 113:23]
        when _T_199 : @[DDU.scala 113:32]
          _T_189 <= UInt<1>("h00") @[DDU.scala 114:27]
          skip @[DDU.scala 113:32]
        else : @[DDU.scala 115:26]
          node _T_201 = sub(_T_185, UInt<1>("h01")) @[DDU.scala 116:34]
          node _T_202 = asUInt(_T_201) @[DDU.scala 116:34]
          node _T_203 = tail(_T_202, 1) @[DDU.scala 116:34]
          _T_185 <= _T_203 @[DDU.scala 116:27]
          skip @[DDU.scala 115:26]
        skip @[DDU.scala 111:41]
      else : @[DDU.scala 118:22]
        _T_192 <= UInt<1>("h00") @[DDU.scala 119:17]
        _T_189 <= UInt<1>("h00") @[DDU.scala 120:27]
        skip @[DDU.scala 118:22]
    when _T_192 : @[DDU.scala 146:59]
      node _T_206 = add(disp_addr, UInt<1>("h01")) @[DDU.scala 147:32]
      node _T_207 = tail(_T_206, 1) @[DDU.scala 147:32]
      disp_addr <= _T_207 @[DDU.scala 147:19]
      skip @[DDU.scala 146:59]
    else : @[DDU.scala 148:65]
      reg _T_209 : UInt<1>, clock @[DDU.scala 97:24]
      _T_209 <= io.dec @[DDU.scala 97:24]
      node _T_211 = eq(_T_209, UInt<1>("h00")) @[DDU.scala 98:34]
      node _T_212 = and(io.dec, _T_211) @[DDU.scala 98:31]
      reg _T_216 : UInt<22>, clock with : (reset => (reset, UInt<22>("h00"))) @[DDU.scala 99:26]
      reg _T_220 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DDU.scala 102:32]
      reg _T_223 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DDU.scala 103:26]
      node _T_224 = eq(_T_220, UInt<1>("h00")) @[DDU.scala 104:25]
      when _T_224 : @[DDU.scala 104:35]
        when _T_212 : @[DDU.scala 105:34]
          _T_220 <= UInt<1>("h01") @[DDU.scala 106:27]
          _T_216 <= UInt<22>("h02625a0") @[DDU.scala 107:27]
          _T_223 <= UInt<1>("h01") @[DDU.scala 108:27]
          skip @[DDU.scala 105:34]
        skip @[DDU.scala 104:35]
      else : @[DDU.scala 111:41]
        node _T_227 = eq(_T_220, UInt<1>("h01")) @[DDU.scala 111:30]
        when _T_227 : @[DDU.scala 111:41]
          _T_223 <= UInt<1>("h00") @[DDU.scala 112:17]
          node _T_230 = eq(_T_216, UInt<1>("h00")) @[DDU.scala 113:23]
          when _T_230 : @[DDU.scala 113:32]
            _T_220 <= UInt<1>("h00") @[DDU.scala 114:27]
            skip @[DDU.scala 113:32]
          else : @[DDU.scala 115:26]
            node _T_232 = sub(_T_216, UInt<1>("h01")) @[DDU.scala 116:34]
            node _T_233 = asUInt(_T_232) @[DDU.scala 116:34]
            node _T_234 = tail(_T_233, 1) @[DDU.scala 116:34]
            _T_216 <= _T_234 @[DDU.scala 116:27]
            skip @[DDU.scala 115:26]
          skip @[DDU.scala 111:41]
        else : @[DDU.scala 118:22]
          _T_223 <= UInt<1>("h00") @[DDU.scala 119:17]
          _T_220 <= UInt<1>("h00") @[DDU.scala 120:27]
          skip @[DDU.scala 118:22]
      when _T_223 : @[DDU.scala 148:65]
        node _T_237 = sub(disp_addr, UInt<1>("h01")) @[DDU.scala 149:32]
        node _T_238 = asUInt(_T_237) @[DDU.scala 149:32]
        node _T_239 = tail(_T_238, 1) @[DDU.scala 149:32]
        disp_addr <= _T_239 @[DDU.scala 149:19]
        skip @[DDU.scala 148:65]
    cpu.io.debug.mr_a <= disp_addr @[DDU.scala 152:23]
    node _T_240 = bits(disp_addr, 4, 0) @[DDU.scala 153:35]
    cpu.io.debug.ra_c <= _T_240 @[DDU.scala 153:23]
    reg _T_242 : UInt<1>, clock @[DDU.scala 97:24]
    _T_242 <= io.step @[DDU.scala 97:24]
    node _T_244 = eq(_T_242, UInt<1>("h00")) @[DDU.scala 98:34]
    node _T_245 = and(io.step, _T_244) @[DDU.scala 98:31]
    reg _T_249 : UInt<22>, clock with : (reset => (reset, UInt<22>("h00"))) @[DDU.scala 99:26]
    reg _T_253 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DDU.scala 102:32]
    reg pressed : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DDU.scala 103:26]
    node _T_256 = eq(_T_253, UInt<1>("h00")) @[DDU.scala 104:25]
    when _T_256 : @[DDU.scala 104:35]
      when _T_245 : @[DDU.scala 105:34]
        _T_253 <= UInt<1>("h01") @[DDU.scala 106:27]
        _T_249 <= UInt<22>("h02625a0") @[DDU.scala 107:27]
        pressed <= UInt<1>("h01") @[DDU.scala 108:27]
        skip @[DDU.scala 105:34]
      skip @[DDU.scala 104:35]
    else : @[DDU.scala 111:41]
      node _T_259 = eq(_T_253, UInt<1>("h01")) @[DDU.scala 111:30]
      when _T_259 : @[DDU.scala 111:41]
        pressed <= UInt<1>("h00") @[DDU.scala 112:17]
        node _T_262 = eq(_T_249, UInt<1>("h00")) @[DDU.scala 113:23]
        when _T_262 : @[DDU.scala 113:32]
          _T_253 <= UInt<1>("h00") @[DDU.scala 114:27]
          skip @[DDU.scala 113:32]
        else : @[DDU.scala 115:26]
          node _T_264 = sub(_T_249, UInt<1>("h01")) @[DDU.scala 116:34]
          node _T_265 = asUInt(_T_264) @[DDU.scala 116:34]
          node _T_266 = tail(_T_265, 1) @[DDU.scala 116:34]
          _T_249 <= _T_266 @[DDU.scala 116:27]
          skip @[DDU.scala 115:26]
        skip @[DDU.scala 111:41]
      else : @[DDU.scala 118:22]
        pressed <= UInt<1>("h00") @[DDU.scala 119:17]
        _T_253 <= UInt<1>("h00") @[DDU.scala 120:27]
        skip @[DDU.scala 118:22]
    node _T_268 = or(pressed, io.cont) @[DDU.scala 158:32]
    node _T_270 = eq(_T_268, UInt<1>("h00")) @[DDU.scala 158:22]
    cpu.io.single <= _T_270 @[DDU.scala 158:19]
    node _T_271 = bits(disp_addr, 9, 0) @[DDU.scala 164:42]
    node _T_272 = shr(_T_271, 2) @[DDU.scala 164:48]
    node _T_273 = bits(disp_addr, 4, 0) @[DDU.scala 164:63]
    node _T_274 = mux(io.mem, _T_272, _T_273) @[DDU.scala 164:24]
    node _T_275 = bits(cpu.io.debug.pc, 9, 0) @[DDU.scala 164:89]
    node _T_276 = shr(_T_275, 2) @[DDU.scala 164:95]
    node _T_277 = bits(_T_276, 7, 0) @[DDU.scala 164:100]
    node _T_278 = cat(_T_274, _T_277) @[Cat.scala 30:58]
    io.led <= _T_278 @[DDU.scala 164:12]
    
